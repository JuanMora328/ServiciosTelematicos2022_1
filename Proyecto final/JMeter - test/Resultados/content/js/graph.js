/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "maxY": 31716.0, "series": [{"data": [[0.0, 43.0], [0.1, 352.0], [0.2, 397.0], [0.3, 407.0], [0.4, 421.0], [0.5, 428.0], [0.6, 453.0], [0.7, 475.0], [0.8, 489.0], [0.9, 501.0], [1.0, 514.0], [1.1, 689.0], [1.2, 693.0], [1.3, 958.0], [1.4, 968.0], [1.5, 1295.0], [1.6, 1418.0], [1.7, 1438.0], [1.8, 1523.0], [1.9, 1533.0], [2.0, 1555.0], [2.1, 1600.0], [2.2, 1601.0], [2.3, 1614.0], [2.4, 1620.0], [2.5, 1626.0], [2.6, 1633.0], [2.7, 1645.0], [2.8, 1681.0], [2.9, 1717.0], [3.0, 1726.0], [3.1, 1730.0], [3.2, 1750.0], [3.3, 1764.0], [3.4, 1783.0], [3.5, 1787.0], [3.6, 1803.0], [3.7, 1834.0], [3.8, 1861.0], [3.9, 1886.0], [4.0, 1905.0], [4.1, 1931.0], [4.2, 1944.0], [4.3, 1952.0], [4.4, 1964.0], [4.5, 1968.0], [4.6, 1973.0], [4.7, 1983.0], [4.8, 1995.0], [4.9, 2022.0], [5.0, 2063.0], [5.1, 2083.0], [5.2, 2136.0], [5.3, 2172.0], [5.4, 2210.0], [5.5, 2225.0], [5.6, 2233.0], [5.7, 2378.0], [5.8, 2612.0], [5.9, 2644.0], [6.0, 2682.0], [6.1, 2715.0], [6.2, 2757.0], [6.3, 2903.0], [6.4, 2946.0], [6.5, 2988.0], [6.6, 3034.0], [6.7, 3083.0], [6.8, 3108.0], [6.9, 3153.0], [7.0, 3208.0], [7.1, 3240.0], [7.2, 3250.0], [7.3, 3260.0], [7.4, 3270.0], [7.5, 3294.0], [7.6, 3319.0], [7.7, 3337.0], [7.8, 3399.0], [7.9, 3444.0], [8.0, 3527.0], [8.1, 3610.0], [8.2, 3720.0], [8.3, 3733.0], [8.4, 3762.0], [8.5, 3816.0], [8.6, 3869.0], [8.7, 3934.0], [8.8, 4028.0], [8.9, 4044.0], [9.0, 4064.0], [9.1, 4079.0], [9.2, 4085.0], [9.3, 4087.0], [9.4, 4104.0], [9.5, 4113.0], [9.6, 4115.0], [9.7, 4117.0], [9.8, 4123.0], [9.9, 4135.0], [10.0, 4144.0], [10.1, 4149.0], [10.2, 4163.0], [10.3, 4170.0], [10.4, 4185.0], [10.5, 4193.0], [10.6, 4209.0], [10.7, 4214.0], [10.8, 4223.0], [10.9, 4230.0], [11.0, 4240.0], [11.1, 4248.0], [11.2, 4253.0], [11.3, 4259.0], [11.4, 4269.0], [11.5, 4300.0], [11.6, 4319.0], [11.7, 4345.0], [11.8, 4362.0], [11.9, 4403.0], [12.0, 4421.0], [12.1, 4487.0], [12.2, 4510.0], [12.3, 4551.0], [12.4, 4567.0], [12.5, 4575.0], [12.6, 4601.0], [12.7, 4618.0], [12.8, 4641.0], [12.9, 4654.0], [13.0, 4664.0], [13.1, 4677.0], [13.2, 4696.0], [13.3, 4711.0], [13.4, 4738.0], [13.5, 4778.0], [13.6, 4813.0], [13.7, 4838.0], [13.8, 4864.0], [13.9, 4894.0], [14.0, 4927.0], [14.1, 4947.0], [14.2, 4966.0], [14.3, 4975.0], [14.4, 4981.0], [14.5, 4998.0], [14.6, 5038.0], [14.7, 5048.0], [14.8, 5059.0], [14.9, 5073.0], [15.0, 5085.0], [15.1, 5093.0], [15.2, 5108.0], [15.3, 5118.0], [15.4, 5129.0], [15.5, 5156.0], [15.6, 5165.0], [15.7, 5177.0], [15.8, 5197.0], [15.9, 5203.0], [16.0, 5213.0], [16.1, 5219.0], [16.2, 5227.0], [16.3, 5236.0], [16.4, 5246.0], [16.5, 5287.0], [16.6, 5309.0], [16.7, 5342.0], [16.8, 5395.0], [16.9, 5419.0], [17.0, 5447.0], [17.1, 5480.0], [17.2, 5491.0], [17.3, 5550.0], [17.4, 5576.0], [17.5, 5583.0], [17.6, 5639.0], [17.7, 5649.0], [17.8, 5715.0], [17.9, 5821.0], [18.0, 5865.0], [18.1, 5879.0], [18.2, 5892.0], [18.3, 5918.0], [18.4, 5963.0], [18.5, 5973.0], [18.6, 5984.0], [18.7, 5989.0], [18.8, 5997.0], [18.9, 6004.0], [19.0, 6012.0], [19.1, 6020.0], [19.2, 6029.0], [19.3, 6041.0], [19.4, 6059.0], [19.5, 6067.0], [19.6, 6072.0], [19.7, 6081.0], [19.8, 6088.0], [19.9, 6099.0], [20.0, 6105.0], [20.1, 6116.0], [20.2, 6133.0], [20.3, 6141.0], [20.4, 6155.0], [20.5, 6170.0], [20.6, 6188.0], [20.7, 6214.0], [20.8, 6255.0], [20.9, 6281.0], [21.0, 6304.0], [21.1, 6343.0], [21.2, 6352.0], [21.3, 6429.0], [21.4, 6497.0], [21.5, 6583.0], [21.6, 6600.0], [21.7, 6660.0], [21.8, 6706.0], [21.9, 6721.0], [22.0, 6734.0], [22.1, 6772.0], [22.2, 6808.0], [22.3, 6860.0], [22.4, 6887.0], [22.5, 6903.0], [22.6, 6995.0], [22.7, 7031.0], [22.8, 7051.0], [22.9, 7071.0], [23.0, 7084.0], [23.1, 7108.0], [23.2, 7131.0], [23.3, 7192.0], [23.4, 7218.0], [23.5, 7270.0], [23.6, 7303.0], [23.7, 7328.0], [23.8, 7339.0], [23.9, 7357.0], [24.0, 7370.0], [24.1, 7379.0], [24.2, 7385.0], [24.3, 7393.0], [24.4, 7409.0], [24.5, 7422.0], [24.6, 7433.0], [24.7, 7448.0], [24.8, 7463.0], [24.9, 7468.0], [25.0, 7471.0], [25.1, 7475.0], [25.2, 7483.0], [25.3, 7486.0], [25.4, 7489.0], [25.5, 7494.0], [25.6, 7498.0], [25.7, 7502.0], [25.8, 7509.0], [25.9, 7513.0], [26.0, 7514.0], [26.1, 7516.0], [26.2, 7522.0], [26.3, 7527.0], [26.4, 7533.0], [26.5, 7537.0], [26.6, 7539.0], [26.7, 7541.0], [26.8, 7544.0], [26.9, 7548.0], [27.0, 7552.0], [27.1, 7556.0], [27.2, 7560.0], [27.3, 7562.0], [27.4, 7566.0], [27.5, 7569.0], [27.6, 7573.0], [27.7, 7578.0], [27.8, 7580.0], [27.9, 7584.0], [28.0, 7589.0], [28.1, 7592.0], [28.2, 7596.0], [28.3, 7606.0], [28.4, 7607.0], [28.5, 7614.0], [28.6, 7617.0], [28.7, 7626.0], [28.8, 7635.0], [28.9, 7639.0], [29.0, 7643.0], [29.1, 7650.0], [29.2, 7657.0], [29.3, 7665.0], [29.4, 7667.0], [29.5, 7670.0], [29.6, 7677.0], [29.7, 7683.0], [29.8, 7688.0], [29.9, 7698.0], [30.0, 7704.0], [30.1, 7706.0], [30.2, 7714.0], [30.3, 7716.0], [30.4, 7722.0], [30.5, 7724.0], [30.6, 7730.0], [30.7, 7736.0], [30.8, 7741.0], [30.9, 7745.0], [31.0, 7749.0], [31.1, 7757.0], [31.2, 7763.0], [31.3, 7765.0], [31.4, 7769.0], [31.5, 7775.0], [31.6, 7780.0], [31.7, 7781.0], [31.8, 7785.0], [31.9, 7789.0], [32.0, 7796.0], [32.1, 7800.0], [32.2, 7804.0], [32.3, 7806.0], [32.4, 7813.0], [32.5, 7819.0], [32.6, 7822.0], [32.7, 7832.0], [32.8, 7838.0], [32.9, 7846.0], [33.0, 7852.0], [33.1, 7856.0], [33.2, 7859.0], [33.3, 7863.0], [33.4, 7870.0], [33.5, 7875.0], [33.6, 7879.0], [33.7, 7884.0], [33.8, 7888.0], [33.9, 7893.0], [34.0, 7901.0], [34.1, 7913.0], [34.2, 7925.0], [34.3, 7944.0], [34.4, 7950.0], [34.5, 7953.0], [34.6, 7956.0], [34.7, 7968.0], [34.8, 7981.0], [34.9, 7984.0], [35.0, 7985.0], [35.1, 7986.0], [35.2, 7990.0], [35.3, 7996.0], [35.4, 7998.0], [35.5, 8002.0], [35.6, 8006.0], [35.7, 8011.0], [35.8, 8015.0], [35.9, 8021.0], [36.0, 8027.0], [36.1, 8030.0], [36.2, 8037.0], [36.3, 8049.0], [36.4, 8055.0], [36.5, 8058.0], [36.6, 8064.0], [36.7, 8067.0], [36.8, 8073.0], [36.9, 8076.0], [37.0, 8082.0], [37.1, 8085.0], [37.2, 8095.0], [37.3, 8098.0], [37.4, 8104.0], [37.5, 8109.0], [37.6, 8115.0], [37.7, 8126.0], [37.8, 8131.0], [37.9, 8135.0], [38.0, 8148.0], [38.1, 8150.0], [38.2, 8159.0], [38.3, 8167.0], [38.4, 8170.0], [38.5, 8179.0], [38.6, 8180.0], [38.7, 8201.0], [38.8, 8206.0], [38.9, 8216.0], [39.0, 8222.0], [39.1, 8226.0], [39.2, 8233.0], [39.3, 8242.0], [39.4, 8246.0], [39.5, 8255.0], [39.6, 8258.0], [39.7, 8273.0], [39.8, 8282.0], [39.9, 8291.0], [40.0, 8295.0], [40.1, 8312.0], [40.2, 8325.0], [40.3, 8340.0], [40.4, 8355.0], [40.5, 8370.0], [40.6, 8377.0], [40.7, 8387.0], [40.8, 8403.0], [40.9, 8423.0], [41.0, 8448.0], [41.1, 8462.0], [41.2, 8477.0], [41.3, 8491.0], [41.4, 8505.0], [41.5, 8526.0], [41.6, 8532.0], [41.7, 8541.0], [41.8, 8549.0], [41.9, 8563.0], [42.0, 8570.0], [42.1, 8581.0], [42.2, 8603.0], [42.3, 8622.0], [42.4, 8646.0], [42.5, 8661.0], [42.6, 8670.0], [42.7, 8688.0], [42.8, 8708.0], [42.9, 8737.0], [43.0, 8760.0], [43.1, 8792.0], [43.2, 8804.0], [43.3, 8817.0], [43.4, 8876.0], [43.5, 8899.0], [43.6, 8928.0], [43.7, 8938.0], [43.8, 8945.0], [43.9, 8966.0], [44.0, 8971.0], [44.1, 8979.0], [44.2, 8996.0], [44.3, 9022.0], [44.4, 9033.0], [44.5, 9049.0], [44.6, 9071.0], [44.7, 9096.0], [44.8, 9151.0], [44.9, 9195.0], [45.0, 9229.0], [45.1, 9273.0], [45.2, 9349.0], [45.3, 9387.0], [45.4, 9439.0], [45.5, 9462.0], [45.6, 9543.0], [45.7, 9635.0], [45.8, 9657.0], [45.9, 9723.0], [46.0, 9765.0], [46.1, 9771.0], [46.2, 9801.0], [46.3, 9817.0], [46.4, 9862.0], [46.5, 9873.0], [46.6, 9897.0], [46.7, 9926.0], [46.8, 9936.0], [46.9, 9954.0], [47.0, 9975.0], [47.1, 10000.0], [47.2, 10009.0], [47.3, 10014.0], [47.4, 10022.0], [47.5, 10032.0], [47.6, 10099.0], [47.7, 10113.0], [47.8, 10123.0], [47.9, 10193.0], [48.0, 10211.0], [48.1, 10246.0], [48.2, 10263.0], [48.3, 10338.0], [48.4, 10365.0], [48.5, 10391.0], [48.6, 10415.0], [48.7, 10425.0], [48.8, 10443.0], [48.9, 10455.0], [49.0, 10477.0], [49.1, 10489.0], [49.2, 10508.0], [49.3, 10575.0], [49.4, 10582.0], [49.5, 10598.0], [49.6, 10621.0], [49.7, 10644.0], [49.8, 10659.0], [49.9, 10677.0], [50.0, 10686.0], [50.1, 10703.0], [50.2, 10743.0], [50.3, 10796.0], [50.4, 10816.0], [50.5, 10836.0], [50.6, 10847.0], [50.7, 10883.0], [50.8, 10907.0], [50.9, 10949.0], [51.0, 10961.0], [51.1, 10974.0], [51.2, 11036.0], [51.3, 11047.0], [51.4, 11051.0], [51.5, 11058.0], [51.6, 11065.0], [51.7, 11069.0], [51.8, 11078.0], [51.9, 11083.0], [52.0, 11090.0], [52.1, 11095.0], [52.2, 11105.0], [52.3, 11127.0], [52.4, 11146.0], [52.5, 11152.0], [52.6, 11158.0], [52.7, 11176.0], [52.8, 11188.0], [52.9, 11229.0], [53.0, 11259.0], [53.1, 11293.0], [53.2, 11300.0], [53.3, 11314.0], [53.4, 11316.0], [53.5, 11328.0], [53.6, 11332.0], [53.7, 11338.0], [53.8, 11343.0], [53.9, 11360.0], [54.0, 11371.0], [54.1, 11392.0], [54.2, 11404.0], [54.3, 11421.0], [54.4, 11434.0], [54.5, 11435.0], [54.6, 11453.0], [54.7, 11457.0], [54.8, 11469.0], [54.9, 11476.0], [55.0, 11482.0], [55.1, 11486.0], [55.2, 11492.0], [55.3, 11504.0], [55.4, 11520.0], [55.5, 11532.0], [55.6, 11537.0], [55.7, 11546.0], [55.8, 11555.0], [55.9, 11561.0], [56.0, 11571.0], [56.1, 11574.0], [56.2, 11578.0], [56.3, 11582.0], [56.4, 11589.0], [56.5, 11597.0], [56.6, 11603.0], [56.7, 11612.0], [56.8, 11622.0], [56.9, 11627.0], [57.0, 11638.0], [57.1, 11643.0], [57.2, 11651.0], [57.3, 11663.0], [57.4, 11666.0], [57.5, 11669.0], [57.6, 11677.0], [57.7, 11689.0], [57.8, 11695.0], [57.9, 11707.0], [58.0, 11712.0], [58.1, 11727.0], [58.2, 11743.0], [58.3, 11756.0], [58.4, 11765.0], [58.5, 11772.0], [58.6, 11791.0], [58.7, 11800.0], [58.8, 11805.0], [58.9, 11821.0], [59.0, 11833.0], [59.1, 11840.0], [59.2, 11847.0], [59.3, 11862.0], [59.4, 11870.0], [59.5, 11875.0], [59.6, 11881.0], [59.7, 11887.0], [59.8, 11899.0], [59.9, 11908.0], [60.0, 11918.0], [60.1, 11926.0], [60.2, 11929.0], [60.3, 11934.0], [60.4, 11942.0], [60.5, 11952.0], [60.6, 11956.0], [60.7, 11964.0], [60.8, 11967.0], [60.9, 11973.0], [61.0, 11978.0], [61.1, 11981.0], [61.2, 11989.0], [61.3, 11994.0], [61.4, 12005.0], [61.5, 12014.0], [61.6, 12024.0], [61.7, 12029.0], [61.8, 12035.0], [61.9, 12041.0], [62.0, 12049.0], [62.1, 12062.0], [62.2, 12073.0], [62.3, 12087.0], [62.4, 12098.0], [62.5, 12102.0], [62.6, 12115.0], [62.7, 12126.0], [62.8, 12147.0], [62.9, 12161.0], [63.0, 12175.0], [63.1, 12188.0], [63.2, 12199.0], [63.3, 12228.0], [63.4, 12244.0], [63.5, 12252.0], [63.6, 12257.0], [63.7, 12268.0], [63.8, 12286.0], [63.9, 12296.0], [64.0, 12312.0], [64.1, 12317.0], [64.2, 12332.0], [64.3, 12340.0], [64.4, 12369.0], [64.5, 12375.0], [64.6, 12387.0], [64.7, 12392.0], [64.8, 12407.0], [64.9, 12427.0], [65.0, 12437.0], [65.1, 12465.0], [65.2, 12482.0], [65.3, 12576.0], [65.4, 12619.0], [65.5, 12666.0], [65.6, 12730.0], [65.7, 12784.0], [65.8, 12813.0], [65.9, 12863.0], [66.0, 12917.0], [66.1, 13007.0], [66.2, 13063.0], [66.3, 13217.0], [66.4, 13390.0], [66.5, 13419.0], [66.6, 13440.0], [66.7, 13456.0], [66.8, 13468.0], [66.9, 13489.0], [67.0, 13510.0], [67.1, 13529.0], [67.2, 13546.0], [67.3, 13548.0], [67.4, 13559.0], [67.5, 13576.0], [67.6, 13632.0], [67.7, 13658.0], [67.8, 13689.0], [67.9, 13725.0], [68.0, 13738.0], [68.1, 13765.0], [68.2, 13868.0], [68.3, 13908.0], [68.4, 13928.0], [68.5, 13960.0], [68.6, 13978.0], [68.7, 14007.0], [68.8, 14027.0], [68.9, 14041.0], [69.0, 14053.0], [69.1, 14061.0], [69.2, 14068.0], [69.3, 14076.0], [69.4, 14083.0], [69.5, 14090.0], [69.6, 14098.0], [69.7, 14106.0], [69.8, 14121.0], [69.9, 14138.0], [70.0, 14188.0], [70.1, 14216.0], [70.2, 14232.0], [70.3, 14239.0], [70.4, 14314.0], [70.5, 14325.0], [70.6, 14357.0], [70.7, 14381.0], [70.8, 14411.0], [70.9, 14415.0], [71.0, 14425.0], [71.1, 14432.0], [71.2, 14460.0], [71.3, 14481.0], [71.4, 14590.0], [71.5, 14627.0], [71.6, 14637.0], [71.7, 14682.0], [71.8, 14720.0], [71.9, 14727.0], [72.0, 14741.0], [72.1, 14746.0], [72.2, 14764.0], [72.3, 14825.0], [72.4, 14853.0], [72.5, 14871.0], [72.6, 14883.0], [72.7, 14927.0], [72.8, 15060.0], [72.9, 15086.0], [73.0, 15093.0], [73.1, 15104.0], [73.2, 15122.0], [73.3, 15134.0], [73.4, 15142.0], [73.5, 15149.0], [73.6, 15153.0], [73.7, 15155.0], [73.8, 15160.0], [73.9, 15164.0], [74.0, 15168.0], [74.1, 15169.0], [74.2, 15172.0], [74.3, 15178.0], [74.4, 15180.0], [74.5, 15183.0], [74.6, 15185.0], [74.7, 15186.0], [74.8, 15190.0], [74.9, 15193.0], [75.0, 15195.0], [75.1, 15198.0], [75.2, 15204.0], [75.3, 15205.0], [75.4, 15208.0], [75.5, 15210.0], [75.6, 15216.0], [75.7, 15217.0], [75.8, 15220.0], [75.9, 15223.0], [76.0, 15225.0], [76.1, 15229.0], [76.2, 15232.0], [76.3, 15236.0], [76.4, 15239.0], [76.5, 15241.0], [76.6, 15243.0], [76.7, 15246.0], [76.8, 15251.0], [76.9, 15255.0], [77.0, 15258.0], [77.1, 15262.0], [77.2, 15264.0], [77.3, 15267.0], [77.4, 15270.0], [77.5, 15273.0], [77.6, 15275.0], [77.7, 15278.0], [77.8, 15279.0], [77.9, 15280.0], [78.0, 15282.0], [78.1, 15286.0], [78.2, 15287.0], [78.3, 15288.0], [78.4, 15290.0], [78.5, 15291.0], [78.6, 15294.0], [78.7, 15295.0], [78.8, 15298.0], [78.9, 15300.0], [79.0, 15303.0], [79.1, 15304.0], [79.2, 15307.0], [79.3, 15308.0], [79.4, 15311.0], [79.5, 15313.0], [79.6, 15317.0], [79.7, 15320.0], [79.8, 15322.0], [79.9, 15325.0], [80.0, 15332.0], [80.1, 15337.0], [80.2, 15341.0], [80.3, 15345.0], [80.4, 15346.0], [80.5, 15351.0], [80.6, 15356.0], [80.7, 15359.0], [80.8, 15362.0], [80.9, 15365.0], [81.0, 15369.0], [81.1, 15373.0], [81.2, 15376.0], [81.3, 15382.0], [81.4, 15386.0], [81.5, 15390.0], [81.6, 15392.0], [81.7, 15395.0], [81.8, 15396.0], [81.9, 15398.0], [82.0, 15401.0], [82.1, 15406.0], [82.2, 15408.0], [82.3, 15410.0], [82.4, 15416.0], [82.5, 15418.0], [82.6, 15420.0], [82.7, 15422.0], [82.8, 15423.0], [82.9, 15428.0], [83.0, 15434.0], [83.1, 15435.0], [83.2, 15437.0], [83.3, 15440.0], [83.4, 15442.0], [83.5, 15445.0], [83.6, 15448.0], [83.7, 15453.0], [83.8, 15456.0], [83.9, 15458.0], [84.0, 15462.0], [84.1, 15465.0], [84.2, 15466.0], [84.3, 15469.0], [84.4, 15473.0], [84.5, 15475.0], [84.6, 15479.0], [84.7, 15483.0], [84.8, 15486.0], [84.9, 15488.0], [85.0, 15491.0], [85.1, 15494.0], [85.2, 15501.0], [85.3, 15505.0], [85.4, 15509.0], [85.5, 15512.0], [85.6, 15517.0], [85.7, 15520.0], [85.8, 15522.0], [85.9, 15528.0], [86.0, 15535.0], [86.1, 15537.0], [86.2, 15541.0], [86.3, 15546.0], [86.4, 15550.0], [86.5, 15553.0], [86.6, 15555.0], [86.7, 15557.0], [86.8, 15562.0], [86.9, 15568.0], [87.0, 15571.0], [87.1, 15574.0], [87.2, 15576.0], [87.3, 15583.0], [87.4, 15587.0], [87.5, 15591.0], [87.6, 15595.0], [87.7, 15600.0], [87.8, 15604.0], [87.9, 15608.0], [88.0, 15612.0], [88.1, 15614.0], [88.2, 15620.0], [88.3, 15623.0], [88.4, 15626.0], [88.5, 15634.0], [88.6, 15637.0], [88.7, 15645.0], [88.8, 15650.0], [88.9, 15653.0], [89.0, 15657.0], [89.1, 15667.0], [89.2, 15678.0], [89.3, 15686.0], [89.4, 15711.0], [89.5, 15729.0], [89.6, 15754.0], [89.7, 15762.0], [89.8, 15788.0], [89.9, 15828.0], [90.0, 15905.0], [90.1, 15953.0], [90.2, 15985.0], [90.3, 16043.0], [90.4, 16208.0], [90.5, 16339.0], [90.6, 16515.0], [90.7, 16609.0], [90.8, 16689.0], [90.9, 16708.0], [91.0, 16765.0], [91.1, 17028.0], [91.2, 17120.0], [91.3, 17681.0], [91.4, 18385.0], [91.5, 18842.0], [91.6, 19287.0], [91.7, 19317.0], [91.8, 19329.0], [91.9, 19336.0], [92.0, 19348.0], [92.1, 19402.0], [92.2, 19439.0], [92.3, 19495.0], [92.4, 19510.0], [92.5, 19529.0], [92.6, 19541.0], [92.7, 19552.0], [92.8, 19602.0], [92.9, 19682.0], [93.0, 19777.0], [93.1, 19890.0], [93.2, 20048.0], [93.3, 20102.0], [93.4, 20196.0], [93.5, 20299.0], [93.6, 20308.0], [93.7, 20323.0], [93.8, 20354.0], [93.9, 20497.0], [94.0, 20621.0], [94.1, 20636.0], [94.2, 20856.0], [94.3, 20953.0], [94.4, 21069.0], [94.5, 21122.0], [94.6, 21130.0], [94.7, 21138.0], [94.8, 21157.0], [94.9, 21200.0], [95.0, 21217.0], [95.1, 21232.0], [95.2, 21238.0], [95.3, 21258.0], [95.4, 21269.0], [95.5, 21279.0], [95.6, 21289.0], [95.7, 21297.0], [95.8, 21310.0], [95.9, 21365.0], [96.0, 21392.0], [96.1, 22147.0], [96.2, 22902.0], [96.3, 22951.0], [96.4, 22974.0], [96.5, 23005.0], [96.6, 23064.0], [96.7, 23093.0], [96.8, 23163.0], [96.9, 23247.0], [97.0, 23389.0], [97.1, 23438.0], [97.2, 23564.0], [97.3, 23580.0], [97.4, 23597.0], [97.5, 23604.0], [97.6, 23618.0], [97.7, 23627.0], [97.8, 23637.0], [97.9, 23646.0], [98.0, 23656.0], [98.1, 23666.0], [98.2, 23671.0], [98.3, 23676.0], [98.4, 23689.0], [98.5, 23693.0], [98.6, 23705.0], [98.7, 23725.0], [98.8, 23736.0], [98.9, 23754.0], [99.0, 23763.0], [99.1, 23779.0], [99.2, 23804.0], [99.3, 23934.0], [99.4, 24055.0], [99.5, 24128.0], [99.6, 24170.0], [99.7, 24223.0], [99.8, 31601.0], [99.9, 31628.0], [100.0, 31716.0]], "isOverall": false, "label": "PaginasPrincipales", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 187.0, "series": [{"data": [[0.0, 4.0], [100.0, 1.0], [300.0, 7.0], [400.0, 31.0], [500.0, 7.0], [600.0, 10.0], [700.0, 3.0], [900.0, 8.0], [1100.0, 2.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 11.0], [1500.0, 16.0], [1600.0, 39.0], [1700.0, 35.0], [1800.0, 19.0], [1900.0, 47.0], [2000.0, 12.0], [2100.0, 13.0], [2200.0, 15.0], [2300.0, 6.0], [2600.0, 13.0], [2800.0, 4.0], [2700.0, 8.0], [2900.0, 11.0], [3000.0, 13.0], [3100.0, 11.0], [3300.0, 15.0], [3200.0, 26.0], [3400.0, 7.0], [3500.0, 7.0], [3700.0, 14.0], [3600.0, 4.0], [3800.0, 12.0], [3900.0, 2.0], [4000.0, 32.0], [4100.0, 58.0], [4200.0, 48.0], [4300.0, 19.0], [4600.0, 33.0], [4500.0, 21.0], [4400.0, 14.0], [4800.0, 16.0], [4700.0, 18.0], [4900.0, 31.0], [5100.0, 33.0], [5000.0, 32.0], [5200.0, 36.0], [5300.0, 13.0], [5400.0, 21.0], [5500.0, 16.0], [5600.0, 11.0], [5700.0, 6.0], [5800.0, 17.0], [5900.0, 29.0], [6100.0, 37.0], [6000.0, 55.0], [6200.0, 16.0], [6300.0, 15.0], [6500.0, 9.0], [6400.0, 7.0], [6600.0, 10.0], [6700.0, 19.0], [6800.0, 16.0], [6900.0, 7.0], [7100.0, 13.0], [7000.0, 22.0], [7200.0, 13.0], [7400.0, 62.0], [7300.0, 40.0], [7500.0, 130.0], [7600.0, 84.0], [7700.0, 109.0], [7900.0, 73.0], [7800.0, 95.0], [8000.0, 93.0], [8100.0, 69.0], [8300.0, 39.0], [8500.0, 39.0], [8700.0, 18.0], [8200.0, 65.0], [8400.0, 29.0], [8600.0, 31.0], [8800.0, 19.0], [8900.0, 36.0], [9100.0, 11.0], [9200.0, 9.0], [9000.0, 24.0], [9400.0, 10.0], [9600.0, 10.0], [9300.0, 11.0], [9500.0, 7.0], [9700.0, 16.0], [10000.0, 27.0], [10100.0, 16.0], [10200.0, 15.0], [9900.0, 22.0], [9800.0, 23.0], [10400.0, 30.0], [10500.0, 19.0], [10600.0, 28.0], [10300.0, 14.0], [10700.0, 12.0], [10900.0, 20.0], [11100.0, 33.0], [11000.0, 49.0], [11200.0, 18.0], [10800.0, 24.0], [11300.0, 49.0], [11700.0, 39.0], [11600.0, 68.0], [11500.0, 63.0], [11400.0, 54.0], [12200.0, 36.0], [12100.0, 39.0], [11800.0, 58.0], [12000.0, 56.0], [11900.0, 75.0], [12500.0, 5.0], [12600.0, 7.0], [12700.0, 14.0], [12400.0, 27.0], [12300.0, 40.0], [13000.0, 6.0], [12800.0, 9.0], [12900.0, 6.0], [13100.0, 4.0], [13200.0, 3.0], [13300.0, 5.0], [13500.0, 31.0], [13700.0, 15.0], [13800.0, 6.0], [13600.0, 15.0], [13400.0, 24.0], [13900.0, 21.0], [14100.0, 21.0], [14000.0, 46.0], [14300.0, 21.0], [14200.0, 15.0], [14400.0, 31.0], [14500.0, 4.0], [14600.0, 16.0], [14800.0, 20.0], [14700.0, 23.0], [15000.0, 19.0], [15100.0, 102.0], [15200.0, 187.0], [15300.0, 154.0], [14900.0, 4.0], [15400.0, 161.0], [15500.0, 125.0], [15600.0, 83.0], [15700.0, 24.0], [15800.0, 9.0], [16000.0, 5.0], [16100.0, 3.0], [15900.0, 12.0], [16300.0, 7.0], [16200.0, 1.0], [17000.0, 5.0], [16400.0, 2.0], [16600.0, 8.0], [16800.0, 2.0], [17800.0, 1.0], [17600.0, 1.0], [18000.0, 1.0], [18400.0, 2.0], [18800.0, 2.0], [19400.0, 13.0], [19200.0, 4.0], [19600.0, 7.0], [19800.0, 4.0], [20200.0, 5.0], [20000.0, 7.0], [20400.0, 3.0], [20600.0, 9.0], [20800.0, 2.0], [21200.0, 42.0], [21000.0, 1.0], [22400.0, 1.0], [22800.0, 3.0], [23200.0, 3.0], [23400.0, 9.0], [23000.0, 11.0], [23600.0, 54.0], [23800.0, 5.0], [24000.0, 8.0], [24200.0, 3.0], [25800.0, 1.0], [31600.0, 6.0], [16900.0, 1.0], [17100.0, 6.0], [16700.0, 8.0], [16500.0, 5.0], [17900.0, 1.0], [18100.0, 1.0], [18300.0, 1.0], [19300.0, 22.0], [19100.0, 2.0], [18500.0, 2.0], [19500.0, 22.0], [19700.0, 5.0], [20300.0, 19.0], [19900.0, 2.0], [20100.0, 6.0], [20900.0, 9.0], [21500.0, 1.0], [21300.0, 15.0], [20500.0, 2.0], [21100.0, 24.0], [21700.0, 1.0], [21900.0, 1.0], [22100.0, 1.0], [22900.0, 15.0], [23300.0, 4.0], [23500.0, 12.0], [23100.0, 8.0], [23700.0, 33.0], [24100.0, 11.0], [23900.0, 2.0], [31500.0, 1.0], [31700.0, 5.0]], "isOverall": false, "label": "PaginasPrincipales", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 31700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3709.0, "series": [{"data": [[0.0, 43.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 45.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3709.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1203.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2284.7074000000043, "minX": 1.65282006E12, "maxY": 2284.7074000000043, "series": [{"data": [[1.65282006E12, 2284.7074000000043]], "isOverall": false, "label": "JMeter-test_balanceo", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65282006E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 961.0, "minX": 1.0, "maxY": 31716.0, "series": [{"data": [[2.0, 31705.0], [3.0, 31716.0], [4.0, 31702.0], [5.0, 31708.0], [6.0, 31628.0], [7.0, 31610.0], [8.0, 31614.0], [9.0, 31620.0], [10.0, 31615.0], [11.0, 31586.0], [12.0, 31601.0], [13.0, 24263.0], [14.0, 12150.5], [15.0, 24223.0], [16.0, 24198.0], [17.0, 24185.0], [18.0, 24176.0], [19.0, 24170.0], [20.0, 24158.0], [21.0, 24154.0], [22.0, 24139.0], [23.0, 24128.0], [24.0, 24128.0], [25.0, 24113.0], [26.0, 24088.0], [27.0, 24076.0], [28.0, 24072.0], [29.0, 24055.0], [30.0, 24049.0], [31.0, 24033.0], [33.0, 24006.0], [32.0, 24034.0], [35.0, 23927.0], [34.0, 23934.0], [37.0, 23848.0], [36.0, 23883.0], [39.0, 23789.0], [38.0, 23810.0], [41.0, 11912.0], [40.0, 23771.0], [43.0, 23725.0], [42.0, 23736.0], [45.0, 23700.0], [44.0, 23705.0], [47.0, 23690.0], [46.0, 23647.0], [48.0, 7943.333333333333], [49.0, 23666.0], [51.0, 23619.0], [50.0, 23649.0], [53.0, 23491.0], [52.0, 23583.0], [55.0, 23463.0], [54.0, 23564.0], [57.0, 23446.0], [56.0, 23456.0], [59.0, 23429.0], [58.0, 23438.0], [61.0, 23215.0], [60.0, 23424.0], [63.0, 23195.0], [62.0, 23199.0], [67.0, 23179.0], [66.0, 23163.0], [65.0, 23361.0], [64.0, 23408.0], [71.0, 23091.0], [70.0, 23105.0], [69.0, 23129.0], [68.0, 23157.0], [75.0, 23247.0], [74.0, 23064.0], [73.0, 23101.0], [72.0, 23064.0], [79.0, 23093.0], [78.0, 23022.0], [77.0, 23054.0], [76.0, 23016.0], [83.0, 22974.0], [82.0, 22971.0], [81.0, 23064.0], [80.0, 23080.0], [87.0, 22934.0], [86.0, 22974.0], [85.0, 22996.0], [84.0, 22951.0], [91.0, 22951.0], [90.0, 22894.0], [89.0, 22933.0], [88.0, 22902.0], [95.0, 25808.0], [94.0, 22856.0], [93.0, 22961.0], [92.0, 22926.0], [99.0, 23692.0], [98.0, 23761.0], [97.0, 23734.0], [96.0, 24194.0], [103.0, 23794.0], [102.0, 23735.0], [101.0, 23679.0], [100.0, 23676.0], [107.0, 23804.0], [106.0, 23716.0], [105.0, 23691.0], [104.0, 23705.0], [111.0, 23706.0], [110.0, 23779.0], [109.0, 23739.0], [108.0, 23693.0], [115.0, 23804.0], [114.0, 23742.0], [113.0, 23796.0], [112.0, 23741.0], [119.0, 23715.0], [118.0, 23758.0], [117.0, 23689.0], [116.0, 23705.0], [123.0, 23676.0], [122.0, 23670.0], [121.0, 23726.0], [120.0, 23672.0], [127.0, 23705.0], [126.0, 23649.0], [125.0, 23658.0], [124.0, 23689.0], [135.0, 23754.0], [134.0, 23764.0], [133.0, 23597.0], [132.0, 23747.0], [131.0, 23731.0], [130.0, 23763.0], [129.0, 23662.0], [128.0, 23716.0], [143.0, 23654.0], [142.0, 23639.0], [141.0, 23646.0], [140.0, 23756.0], [139.0, 23772.0], [138.0, 23768.0], [137.0, 23618.0], [136.0, 23598.0], [151.0, 23618.0], [150.0, 23638.0], [149.0, 23611.0], [148.0, 23573.0], [147.0, 23604.0], [146.0, 23595.0], [145.0, 23629.0], [144.0, 23626.0], [156.0, 11909.0], [159.0, 23642.0], [158.0, 23689.0], [157.0, 23571.0], [155.0, 23622.0], [154.0, 23601.0], [153.0, 23669.0], [152.0, 23628.0], [167.0, 23609.0], [166.0, 23597.0], [165.0, 23580.0], [164.0, 23619.0], [163.0, 23674.0], [162.0, 23590.0], [161.0, 23663.0], [160.0, 23685.0], [175.0, 23671.0], [174.0, 23600.0], [173.0, 23577.0], [172.0, 23683.0], [171.0, 23627.0], [170.0, 23668.0], [169.0, 23665.0], [168.0, 23643.0], [183.0, 23005.0], [182.0, 22999.0], [181.0, 20650.0], [180.0, 23673.0], [179.0, 23615.0], [178.0, 23632.0], [177.0, 23656.0], [176.0, 23627.0], [191.0, 20959.0], [190.0, 20946.0], [189.0, 20979.0], [188.0, 20953.0], [187.0, 20924.0], [186.0, 23005.0], [185.0, 22988.0], [184.0, 20992.0], [199.0, 23566.0], [198.0, 23602.0], [197.0, 23384.0], [196.0, 23389.0], [195.0, 23423.0], [194.0, 20982.0], [193.0, 20936.0], [192.0, 22988.0], [207.0, 21237.0], [206.0, 21230.0], [205.0, 21279.0], [204.0, 22833.0], [203.0, 21379.0], [202.0, 23299.0], [201.0, 22925.0], [200.0, 23311.0], [215.0, 21392.0], [214.0, 21273.0], [213.0, 21300.0], [212.0, 21289.0], [211.0, 21292.0], [210.0, 21206.0], [209.0, 21217.0], [208.0, 21281.0], [223.0, 21200.0], [222.0, 21329.0], [221.0, 21368.0], [220.0, 21368.5], [218.0, 21283.0], [217.0, 21279.0], [216.0, 21382.0], [231.0, 21253.333333333332], [230.0, 21187.0], [226.0, 21348.0], [225.0, 21365.0], [224.0, 21237.0], [239.0, 21203.0], [238.0, 21306.0], [237.0, 21300.0], [236.0, 21297.0], [235.0, 21201.0], [234.0, 21198.0], [233.0, 21069.0], [232.0, 21156.0], [246.0, 21292.0], [245.0, 21157.0], [244.0, 21179.0], [243.0, 21111.0], [242.0, 21177.0], [241.0, 21284.0], [240.0, 21310.0], [255.0, 21130.0], [253.0, 21125.0], [252.0, 21230.0], [251.0, 21129.0], [250.0, 21123.0], [249.0, 21152.0], [248.0, 21288.0], [270.0, 21175.5], [268.0, 21236.0], [266.0, 21127.0], [264.0, 21264.0], [262.0, 21247.5], [260.0, 21134.0], [258.0, 21228.0], [256.0, 21140.0], [286.0, 20348.0], [284.0, 20386.0], [282.0, 21103.0], [278.0, 21264.0], [276.0, 21105.0], [274.0, 21276.0], [272.0, 21253.5], [302.0, 20144.0], [300.0, 20192.0], [298.0, 20626.0], [296.0, 20625.0], [294.0, 20640.0], [292.0, 20624.0], [290.0, 20217.0], [288.0, 20254.0], [316.0, 10277.0], [318.0, 20035.0], [314.0, 20498.0], [312.0, 20499.0], [310.0, 20509.0], [308.0, 20102.0], [306.0, 20088.0], [304.0, 21905.0], [322.0, 6988.0], [332.0, 7068.0], [320.0, 5372.25], [334.0, 7091.666666666667], [330.0, 5444.25], [328.0, 19882.0], [326.0, 10400.0], [324.0, 11092.0], [348.0, 5386.25], [338.0, 4394.6], [336.0, 20308.0], [350.0, 10087.5], [346.0, 10007.5], [344.0, 7055.0], [342.0, 7049.0], [340.0, 7052.666666666667], [366.0, 20804.0], [364.0, 19532.0], [362.0, 20856.0], [360.0, 19315.0], [358.0, 20935.0], [356.0, 15310.0], [354.0, 19680.0], [352.0, 19735.0], [380.0, 15164.333333333334], [382.0, 15205.0], [376.0, 15178.0], [368.0, 15225.0], [370.0, 15242.0], [398.0, 19334.6], [396.0, 15291.0], [392.0, 15281.0], [388.0, 15311.0], [386.0, 19394.0], [384.0, 15161.0], [414.0, 18385.0], [412.0, 18430.0], [410.0, 19455.0], [408.0, 18510.0], [400.0, 19336.0], [402.0, 19337.0], [406.0, 19287.0], [404.0, 19317.0], [416.0, 10007.0], [420.0, 16609.0], [418.0, 20655.0], [428.0, 15153.0], [424.0, 15177.0], [422.0, 15275.0], [444.0, 15279.0], [434.0, 15185.0], [432.0, 15278.0], [442.0, 15248.0], [440.0, 15187.0], [438.0, 15215.0], [456.0, 15280.0], [458.0, 15295.0], [448.0, 15228.666666666666], [454.0, 15288.0], [452.0, 15281.0], [476.0, 15238.0], [472.0, 15273.666666666666], [468.0, 15235.0], [466.0, 15270.571428571428], [492.0, 15220.333333333332], [486.0, 15141.0], [484.0, 15171.0], [480.0, 15231.666666666666], [508.0, 15468.5], [510.0, 15478.0], [498.0, 15179.0], [496.0, 15217.0], [506.0, 15485.0], [504.0, 17681.0], [502.0, 19541.0], [500.0, 15216.5], [536.0, 15186.6], [528.0, 15183.0], [524.0, 15204.0], [520.0, 15643.25], [516.0, 15153.0], [572.0, 15208.0], [564.0, 19329.0], [556.0, 15078.0], [552.0, 15099.0], [548.0, 19437.0], [600.0, 19500.0], [604.0, 11018.0], [580.0, 19604.0], [596.0, 19505.0], [592.0, 19532.0], [588.0, 19515.0], [584.0, 19541.0], [632.0, 15587.75], [636.0, 15637.5], [608.0, 15724.0], [628.0, 15610.0], [624.0, 15519.333333333334], [620.0, 15596.5], [616.0, 15571.0], [668.0, 15637.0], [652.0, 15548.0], [644.0, 19402.0], [700.0, 15487.333333333334], [696.0, 15458.0], [684.0, 15396.0], [680.0, 15422.0], [672.0, 15509.5], [728.0, 15597.5], [724.0, 15643.0], [720.0, 15595.5], [716.0, 15557.0], [704.0, 15493.0], [760.0, 15408.0], [752.0, 15416.5], [748.0, 15435.0], [744.0, 15375.0], [740.0, 15466.0], [736.0, 17027.0], [796.0, 15264.0], [776.0, 15383.0], [804.0, 15899.0], [824.0, 1438.3333333333333], [812.0, 15473.0], [808.0, 16683.0], [820.0, 1625.6666666666667], [816.0, 1630.0], [828.0, 8567.0], [848.0, 10810.333333333334], [836.0, 10188.5], [832.0, 6386.0], [840.0, 15505.0], [860.0, 1689.0], [852.0, 15435.6], [892.0, 15148.0], [888.0, 15417.0], [876.0, 15347.0], [924.0, 15384.666666666666], [916.0, 15322.0], [908.0, 15231.5], [952.0, 1783.2727272727273], [948.0, 15395.5], [936.0, 15344.0], [932.0, 15350.5], [928.0, 15331.0], [984.0, 15229.0], [976.0, 15324.0], [968.0, 15488.5], [964.0, 15761.0], [1016.0, 8513.5], [1020.0, 4608.8], [996.0, 15263.0], [1012.0, 1900.0], [1008.0, 15250.0], [1004.0, 15324.0], [1000.0, 15294.0], [1072.0, 1921.0], [1056.0, 8755.0], [1064.0, 1886.0], [1024.0, 10997.666666666666], [1048.0, 1988.0], [1040.0, 1291.0], [1144.0, 16721.0], [1136.0, 16016.5], [1128.0, 15406.0], [1120.0, 15479.0], [1208.0, 15271.0], [1200.0, 15294.5], [1160.0, 15430.0], [1192.0, 15390.5], [1176.0, 15350.0], [1168.0, 15960.0], [1272.0, 12033.0], [1264.0, 14056.0], [1256.0, 14038.0], [1248.0, 17080.0], [1224.0, 15273.0], [1240.0, 17120.0], [1336.0, 14327.0], [1328.0, 11979.0], [1320.0, 12245.0], [1312.0, 14858.0], [1280.0, 14415.0], [1288.0, 14875.0], [1304.0, 12084.0], [1296.0, 14069.0], [1400.0, 14927.0], [1392.0, 14732.0], [1384.0, 14727.0], [1376.0, 14726.0], [1352.0, 14413.0], [1368.0, 11944.0], [1464.0, 12029.0], [1456.0, 13071.0], [1440.0, 11974.0], [1408.0, 11875.0], [1416.0, 14897.0], [1432.0, 11870.0], [1424.0, 11887.0], [1528.0, 11727.0], [1520.0, 14371.0], [1512.0, 14312.0], [1504.0, 14076.0], [1472.0, 11805.0], [1480.0, 12033.0], [1496.0, 11800.0], [1488.0, 11800.0], [1592.0, 11622.0], [1584.0, 13821.0], [1576.0, 11862.0], [1568.0, 13510.0], [1536.0, 13928.0], [1544.0, 13542.0], [1560.0, 11679.0], [1552.0, 13545.0], [1608.0, 11711.0], [1656.0, 14453.0], [1600.0, 3325.4285714285716], [1624.0, 13424.0], [1616.0, 13403.0], [1648.0, 14204.0], [1640.0, 11328.0], [1632.0, 13472.0], [1720.0, 13671.0], [1712.0, 11533.0], [1704.0, 11434.0], [1696.0, 14415.0], [1664.0, 14481.0], [1672.0, 14428.0], [1688.0, 14413.0], [1680.0, 11469.0], [1784.0, 13510.0], [1776.0, 12396.0], [1768.0, 11626.0], [1760.0, 11576.0], [1728.0, 13674.0], [1736.0, 13978.0], [1752.0, 15449.0], [1744.0, 13927.0], [1800.0, 11552.0], [1848.0, 12244.0], [1792.0, 6433.0], [1816.0, 11625.0], [1808.0, 13456.0], [1840.0, 12161.0], [1832.0, 11563.0], [1824.0, 11440.0], [1912.0, 11343.0], [1904.0, 14102.0], [1896.0, 12257.0], [1888.0, 14185.0], [1856.0, 12293.0], [1864.0, 12312.0], [1880.0, 12487.0], [1872.0, 12317.0], [1968.0, 15436.0], [1928.0, 12049.0], [1920.0, 12051.0], [1960.0, 15409.0], [1944.0, 10204.0], [1936.0, 12127.0], [2032.0, 15421.5], [2024.0, 15319.0], [1984.0, 14059.5], [2008.0, 11929.0], [2000.0, 13868.0], [1992.0, 11985.0], [2160.0, 12434.5], [2144.0, 11395.0], [2112.0, 12265.0], [2048.0, 15357.2], [2096.0, 15172.0], [2080.0, 15275.833333333332], [2288.0, 10790.0], [2256.0, 10881.0], [2224.0, 11958.5], [2208.0, 11070.0], [2416.0, 8930.0], [2400.0, 9898.5], [2384.0, 9273.0], [2368.0, 8585.0], [2336.0, 8708.0], [2544.0, 3912.5], [2528.0, 7848.0], [2480.0, 8892.0], [2448.0, 8947.1], [2656.0, 10604.0], [2672.0, 10687.5], [2560.0, 7706.5], [2608.0, 7686.0], [2640.0, 11786.5], [2800.0, 7995.0], [2752.0, 8086.0], [2784.0, 9891.0], [2704.0, 10391.0], [2688.0, 7543.5], [2912.0, 11984.0], [2816.0, 7962.0], [2928.0, 11333.75], [2864.0, 7827.0], [2848.0, 11158.0], [2896.0, 7743.0], [2880.0, 11398.0], [3056.0, 7573.222222222223], [3008.0, 7594.0], [2960.0, 10023.0], [2944.0, 11294.0], [2976.0, 8453.75], [3024.0, 7639.0], [3184.0, 9089.0], [3168.0, 8677.0], [3088.0, 9985.0], [3120.0, 6724.0], [3104.0, 7758.0], [3136.0, 8689.333333333334], [3312.0, 7769.0], [3264.0, 7899.0], [3296.0, 10113.0], [3200.0, 9723.0], [3248.0, 7592.0], [3232.0, 8696.5], [3376.0, 9907.0], [3408.0, 6256.0], [3392.0, 8050.0], [3552.0, 8085.0], [3456.0, 5983.0], [3472.0, 7954.0], [3504.0, 7059.0], [3520.0, 8223.0], [3680.0, 10598.0], [3600.0, 8463.0], [3664.0, 7876.0], [3648.0, 8055.0], [3632.0, 7993.0], [3824.0, 7401.5], [3728.0, 6317.5], [3744.0, 9035.0], [3904.0, 6139.0], [3856.0, 7720.0], [3872.0, 10093.5], [4080.0, 8282.0], [4048.0, 7351.0], [4064.0, 5489.0], [3984.0, 9436.0], [4016.0, 4242.0], [4000.0, 4351.0], [4224.0, 7580.0], [4256.0, 7485.0], [4288.0, 7335.0], [4096.0, 9449.0], [4480.0, 7104.0], [4512.0, 5827.0], [4576.0, 5639.0], [4544.0, 2381.0], [4384.0, 6397.5], [4352.0, 6125.0], [4416.0, 6884.0], [4608.0, 4584.5], [4704.0, 6137.0], [4672.0, 5069.0], [4321.0, 4564.0], [4257.0, 8737.0], [4289.0, 5446.0], [4097.0, 7986.0], [4129.0, 4980.5], [4577.0, 4967.0], [4481.0, 3551.0], [4513.0, 6343.0], [4353.0, 2661.0], [4385.0, 4117.0], [4417.0, 7394.0], [4609.0, 5984.0], [4641.0, 5885.0], [4673.0, 5050.0], [2145.0, 11391.0], [2161.0, 12407.0], [2113.0, 13998.0], [2049.0, 15273.0], [2097.0, 15189.0], [2065.0, 15257.333333333334], [2289.0, 9766.0], [2273.0, 10411.5], [2241.0, 10969.0], [2177.0, 11149.333333333334], [2385.0, 12370.0], [2369.0, 11455.0], [2337.0, 11370.0], [2321.0, 9634.5], [2305.0, 10727.5], [2529.0, 8235.0], [2513.0, 7866.5], [2465.0, 7836.0], [2625.0, 9264.5], [2593.0, 7721.0], [2801.0, 7955.0], [2785.0, 11720.0], [2689.0, 7539.0], [2737.0, 9548.666666666666], [2721.0, 8599.5], [2929.0, 11323.0], [2913.0, 7608.0], [2865.0, 7794.0], [2961.0, 10000.0], [3041.0, 7582.2], [2945.0, 11289.0], [3025.0, 7609.0], [3009.0, 8991.0], [2993.0, 8328.5], [2977.0, 6626.0], [3185.0, 9420.0], [3137.0, 7119.0], [3089.0, 10377.333333333334], [3121.0, 9854.0], [3105.0, 8805.0], [3153.0, 9998.0], [3265.0, 10443.0], [3313.0, 9318.0], [3297.0, 11731.0], [3217.0, 7782.0], [3249.0, 8376.0], [3425.0, 6057.333333333333], [3409.0, 6256.0], [3393.0, 8051.0], [3377.0, 6020.0], [3361.0, 8084.0], [3553.0, 8255.0], [3537.0, 6125.0], [3569.0, 7323.0], [3521.0, 8127.0], [3457.0, 8067.0], [3601.0, 10349.0], [3633.0, 5129.0], [3777.0, 7417.5], [3761.0, 6054.0], [3745.0, 4744.0], [3793.0, 7486.0], [3953.0, 4194.5], [3905.0, 4081.0], [3921.0, 5086.666666666667], [3841.0, 6793.0], [3857.0, 7724.0], [3889.0, 7490.0], [4065.0, 8378.0], [4081.0, 8312.0], [4049.0, 5358.0], [3985.0, 4352.0], [4017.0, 4320.0], [4001.0, 4302.0], [4226.0, 6655.0], [4258.0, 7477.0], [4130.0, 3070.0], [4098.0, 7970.0], [4578.0, 4775.0], [4482.0, 2938.0], [4514.0, 5118.0], [4354.0, 4142.0], [4418.0, 4353.0], [4610.0, 5973.0], [4706.0, 5402.0], [4674.0, 5063.0], [4323.0, 3108.0], [4291.0, 6392.5], [4227.0, 7576.0], [4259.0, 5545.0], [4099.0, 6188.0], [4131.0, 7533.0], [4163.0, 7666.75], [4483.0, 5297.0], [4515.0, 5130.0], [4547.0, 5120.0], [4355.0, 6082.0], [4387.0, 5325.0], [4419.0, 7422.0], [4643.0, 6220.5], [4611.0, 7192.0], [4707.0, 4571.0], [4675.0, 6776.0], [1073.0, 1922.6666666666667], [1057.0, 1972.5], [1081.0, 15517.0], [1065.0, 8724.0], [1025.0, 2233.0], [1033.0, 1763.8], [1049.0, 11016.333333333334], [1041.0, 12819.0], [1137.0, 15382.0], [1129.0, 15478.0], [1089.0, 15557.0], [1193.0, 16175.0], [1185.0, 11950.5], [1169.0, 15393.0], [1161.0, 15457.0], [1153.0, 15526.5], [1273.0, 14748.0], [1265.0, 14104.0], [1257.0, 12313.0], [1249.0, 14040.0], [1241.0, 12379.0], [1225.0, 15208.0], [1217.0, 15637.0], [1337.0, 14312.0], [1329.0, 14068.0], [1321.0, 14853.0], [1313.0, 14815.0], [1281.0, 14833.0], [1289.0, 14764.0], [1305.0, 12026.0], [1297.0, 12100.0], [1401.0, 11875.0], [1393.0, 14751.0], [1385.0, 14720.0], [1377.0, 14682.0], [1345.0, 13308.5], [1369.0, 14642.0], [1361.0, 14655.0], [1465.0, 14108.0], [1457.0, 14131.0], [1441.0, 11785.0], [1409.0, 11842.0], [1417.0, 14911.0], [1433.0, 11976.0], [1425.0, 11887.0], [1521.0, 14601.0], [1505.0, 11857.0], [1481.0, 11802.0], [1473.0, 11991.0], [1513.0, 14314.0], [1497.0, 11777.0], [1489.0, 11801.0], [1585.0, 13543.0], [1593.0, 11594.0], [1545.0, 13547.0], [1537.0, 13920.0], [1577.0, 13507.0], [1569.0, 13506.0], [1561.0, 13507.0], [1553.0, 13569.0], [1657.0, 14235.0], [1649.0, 14218.0], [1641.0, 11627.0], [1633.0, 13462.0], [1609.0, 11435.0], [1601.0, 11672.0], [1617.0, 13437.0], [1721.0, 11384.0], [1713.0, 11404.0], [1705.0, 14423.0], [1697.0, 14426.0], [1665.0, 14469.0], [1673.0, 11483.0], [1689.0, 11446.0], [1681.0, 11474.0], [1785.0, 12392.0], [1777.0, 12430.0], [1769.0, 12386.0], [1761.0, 11606.0], [1753.0, 11560.0], [1729.0, 13636.0], [1737.0, 13704.0], [1745.0, 14023.0], [1849.0, 12271.0], [1841.0, 11568.0], [1833.0, 12252.0], [1825.0, 11476.0], [1793.0, 11572.0], [1801.0, 11484.0], [1817.0, 11546.0], [1809.0, 11501.0], [1913.0, 11315.0], [1905.0, 14084.0], [1897.0, 11332.0], [1889.0, 12192.0], [1857.0, 12300.0], [1865.0, 12335.0], [1881.0, 12166.0], [1873.0, 12473.0], [1953.0, 15446.0], [1961.0, 12067.0], [1945.0, 13990.0], [1937.0, 12107.0], [1929.0, 12028.0], [1921.0, 11686.0], [2033.0, 15445.0], [2041.0, 15336.0], [1993.0, 11970.0], [1985.0, 11990.0], [2025.0, 12730.0], [2017.0, 11928.0], [2009.0, 11981.0], [2001.0, 11902.0], [2146.0, 11394.0], [2162.0, 12443.0], [2098.0, 15133.0], [2082.0, 15683.5], [2066.0, 15221.0], [2290.0, 9096.0], [2274.0, 9773.0], [2258.0, 10496.5], [2242.0, 10964.0], [2226.0, 11444.0], [2210.0, 11057.5], [2418.0, 11075.5], [2402.0, 8275.5], [2386.0, 8291.0], [2370.0, 8576.0], [2322.0, 11807.0], [2546.0, 6620.75], [2514.0, 7804.0], [2498.0, 8035.4], [2450.0, 7799.0], [2434.0, 8921.333333333334], [2626.0, 12797.0], [2562.0, 9022.0], [2610.0, 10254.5], [2594.0, 7691.0], [2706.0, 9894.25], [2690.0, 7543.0], [2930.0, 11329.0], [2898.0, 7731.5], [2914.0, 11335.0], [2834.0, 9668.4], [2818.0, 7950.5], [2866.0, 9981.0], [2850.0, 11549.0], [2962.0, 10030.0], [3042.0, 7488.0], [2946.0, 8057.0], [3010.0, 11176.0], [2994.0, 8002.0], [2978.0, 8030.0], [3074.0, 10349.5], [3186.0, 9141.0], [3122.0, 6725.0], [3106.0, 6755.0], [3154.0, 9549.0], [3314.0, 10909.0], [3266.0, 7587.0], [3282.0, 7771.666666666667], [3298.0, 9439.0], [3218.0, 9076.0], [3202.0, 8530.5], [3442.0, 6054.8], [3426.0, 6053.0], [3394.0, 8064.0], [3346.0, 7775.333333333333], [3330.0, 7669.5], [3378.0, 6004.0], [3362.0, 8115.0], [3522.0, 8628.0], [3458.0, 6021.0], [3474.0, 6979.0], [3506.0, 7591.5], [3490.0, 8838.0], [3538.0, 8201.0], [3602.0, 6262.0], [3666.0, 8644.5], [3682.0, 4955.0], [3586.0, 7479.666666666667], [3634.0, 9117.0], [3778.0, 7399.0], [3954.0, 4169.0], [3906.0, 6172.0], [3938.0, 7337.0], [3858.0, 8971.0], [3842.0, 7704.0], [3890.0, 7486.0], [3874.0, 4405.0], [4082.0, 7379.0], [4034.0, 5362.333333333333], [4066.0, 5488.0], [3970.0, 6813.0], [3986.0, 7602.0], [4018.0, 4215.0], [4002.0, 4291.0], [4228.0, 7594.0], [4324.0, 3153.0], [4260.0, 5550.0], [4292.0, 5455.0], [4100.0, 3801.0], [4132.0, 6349.0], [4164.0, 5073.0], [4580.0, 3305.5], [4516.0, 5140.0], [4388.0, 5326.0], [4356.0, 4081.0], [4420.0, 6827.0], [4612.0, 7296.0], [4644.0, 6583.0], [4708.0, 5840.0], [4229.0, 7587.0], [4261.0, 7467.0], [4325.0, 3108.0], [4293.0, 5441.0], [4101.0, 5085.0], [4133.0, 5093.0], [4165.0, 5085.0], [4549.0, 4667.0], [4357.0, 4068.0], [4389.0, 7021.0], [4709.0, 4611.0], [4677.0, 5968.5], [2163.0, 12409.0], [2147.0, 11303.0], [2099.0, 15153.0], [2083.0, 15362.0], [2275.0, 11903.0], [2291.0, 10785.0], [2195.0, 11226.0], [2179.0, 13116.0], [2259.0, 10838.0], [2243.0, 10949.0], [2211.0, 10974.0], [2403.0, 8168.0], [2419.0, 11062.0], [2355.0, 10984.666666666666], [2339.0, 11665.0], [2323.0, 11796.0], [2547.0, 8126.0], [2579.0, 7553.75], [2627.0, 10710.0], [2611.0, 12791.0], [2563.0, 7539.0], [2595.0, 10211.0], [2787.0, 7999.5], [2771.0, 10779.2], [2803.0, 8039.5], [2691.0, 7560.0], [2739.0, 9158.0], [2755.0, 10319.666666666666], [2835.0, 8979.0], [2931.0, 11322.0], [2883.0, 9221.666666666666], [2867.0, 9954.0], [2851.0, 7838.0], [2963.0, 8688.0], [3011.0, 9249.0], [2995.0, 11215.0], [3171.0, 8630.333333333334], [3187.0, 9054.0], [3139.0, 8245.5], [3123.0, 6695.0], [3155.0, 7071.0], [3267.0, 8218.0], [3251.0, 7660.0], [3283.0, 7823.0], [3427.0, 6088.0], [3443.0, 6100.0], [3331.0, 7654.0], [3347.0, 7541.0], [3363.0, 8095.0], [3411.0, 7108.5], [3395.0, 7991.0], [3571.0, 7900.0], [3459.0, 5965.0], [3475.0, 8008.0], [3507.0, 8107.0], [3491.0, 7870.0], [3539.0, 9114.0], [3683.0, 4957.5], [3587.0, 7985.0], [3651.0, 9426.0], [3635.0, 4863.0], [3619.0, 7508.0], [3827.0, 5272.0], [3779.0, 7381.0], [3731.0, 7723.0], [3763.0, 7739.5], [3747.0, 6884.0], [3795.0, 7493.0], [3955.0, 7115.0], [3939.0, 8392.0], [3891.0, 6045.0], [4035.0, 4104.0], [4083.0, 7386.0], [4051.0, 6356.0], [4067.0, 8395.0], [3987.0, 4376.0], [4019.0, 7228.0], [4003.0, 4220.0], [4230.0, 7562.0], [4262.0, 7448.0], [4102.0, 7715.0], [4166.0, 5079.0], [4486.0, 4088.3333333333335], [4582.0, 4975.5], [4518.0, 5112.5], [4550.0, 3439.0], [4390.0, 8325.0], [4358.0, 4139.0], [4422.0, 4492.0], [4614.0, 5328.5], [4231.0, 7569.0], [4103.0, 3269.0], [4135.0, 6817.0], [4199.0, 4908.777777777777], [4167.0, 5180.0], [4551.0, 3278.0], [4487.0, 5290.0], [4519.0, 5110.0], [4359.0, 2682.0], [4391.0, 7006.0], [4423.0, 2112.0], [4615.0, 4694.0], [4647.0, 5426.666666666667], [4711.0, 5917.5], [537.0, 15169.0], [521.0, 15134.0], [513.0, 16636.0], [573.0, 15229.0], [569.0, 15202.666666666666], [565.0, 19348.0], [557.0, 15071.0], [553.0, 15060.0], [549.0, 19424.0], [545.0, 15185.0], [581.0, 19592.0], [601.0, 5598.0], [577.0, 15304.5], [597.0, 19488.0], [593.0, 19517.0], [589.0, 15122.0], [585.0, 19529.0], [633.0, 16714.0], [625.0, 15586.0], [621.0, 15592.0], [613.0, 15600.0], [669.0, 15454.0], [665.0, 15645.5], [661.0, 15538.5], [645.0, 19395.0], [693.0, 15421.0], [685.0, 15650.0], [681.0, 15591.25], [677.0, 15571.0], [733.0, 15663.5], [725.0, 15635.0], [721.0, 15625.0], [717.0, 15603.0], [713.0, 15397.0], [741.0, 15390.0], [761.0, 15464.0], [753.0, 15380.0], [737.0, 15352.0], [781.0, 10720.0], [793.0, 15303.5], [769.0, 15530.666666666666], [785.0, 15297.5], [777.0, 15370.0], [801.0, 15287.5], [813.0, 1633.0], [825.0, 13467.0], [809.0, 15785.0], [821.0, 1482.75], [817.0, 1627.0], [829.0, 1539.6666666666667], [833.0, 4437.6], [837.0, 5048.6], [857.0, 15423.2], [845.0, 15307.0], [893.0, 15236.0], [889.0, 15288.0], [877.0, 15320.0], [921.0, 15432.0], [917.0, 15443.0], [913.0, 15303.5], [909.0, 15290.0], [905.0, 15196.285714285714], [953.0, 15404.0], [933.0, 15336.0], [929.0, 17028.0], [989.0, 15335.75], [985.0, 15314.5], [981.0, 15322.0], [977.0, 15263.0], [965.0, 15390.0], [961.0, 15960.0], [1021.0, 8711.5], [1017.0, 4531.0], [1013.0, 1723.3333333333333], [1009.0, 15286.0], [1005.0, 15287.666666666666], [997.0, 15190.0], [993.0, 15857.0], [1001.0, 15346.0], [1082.0, 15634.0], [1074.0, 1912.6666666666667], [1058.0, 6495.0], [1066.0, 1932.0], [1026.0, 8921.5], [1034.0, 15952.0], [1050.0, 1982.0], [1146.0, 16106.5], [1098.0, 15642.666666666666], [1130.0, 15604.0], [1122.0, 15415.0], [1114.0, 15500.0], [1106.0, 15398.666666666666], [1210.0, 15252.5], [1186.0, 12064.0], [1178.0, 15353.0], [1170.0, 13008.0], [1162.0, 15442.0], [1274.0, 14111.0], [1266.0, 14034.0], [1258.0, 13769.0], [1250.0, 14090.0], [1242.0, 12339.0], [1338.0, 14328.0], [1330.0, 12007.0], [1322.0, 14083.0], [1314.0, 14845.0], [1282.0, 14419.0], [1290.0, 14070.0], [1306.0, 12079.0], [1298.0, 14090.0], [1402.0, 11905.0], [1394.0, 14872.0], [1386.0, 14739.0], [1378.0, 14727.0], [1354.0, 11983.0], [1370.0, 11906.0], [1362.0, 12176.0], [1466.0, 12048.0], [1418.0, 14915.0], [1410.0, 11837.0], [1442.0, 11872.0], [1434.0, 11808.0], [1426.0, 11869.0], [1482.0, 11838.0], [1522.0, 11749.0], [1474.0, 11752.0], [1514.0, 14320.0], [1506.0, 14027.0], [1498.0, 11770.0], [1490.0, 11897.0], [1594.0, 11696.0], [1578.0, 7712.5], [1586.0, 11632.0], [1546.0, 13550.0], [1538.0, 14853.0], [1570.0, 13576.0], [1562.0, 11623.0], [1554.0, 13557.0], [1658.0, 14461.0], [1650.0, 14188.0], [1642.0, 11666.0], [1634.0, 11293.0], [1602.0, 11556.0], [1610.0, 11425.0], [1618.0, 13408.0], [1722.0, 13653.0], [1714.0, 14054.0], [1706.0, 11555.0], [1698.0, 11486.0], [1666.0, 14488.0], [1674.0, 11491.0], [1690.0, 14414.0], [1682.0, 11470.0], [1786.0, 11091.0], [1778.0, 12379.0], [1762.0, 11613.0], [1730.0, 13977.0], [1738.0, 13696.0], [1754.0, 11591.0], [1746.0, 14032.0], [1802.0, 11229.0], [1850.0, 12263.0], [1794.0, 11548.0], [1818.0, 13438.0], [1810.0, 11486.0], [1842.0, 12164.0], [1834.0, 11586.0], [1826.0, 11508.0], [1914.0, 11658.0], [1906.0, 14070.0], [1898.0, 11188.0], [1890.0, 12188.0], [1858.0, 12296.0], [1866.0, 12474.0], [1882.0, 12179.0], [1874.0, 12412.0], [1970.0, 12150.0], [1978.0, 15520.0], [1930.0, 11667.0], [1922.0, 11669.0], [1962.0, 12062.0], [1954.0, 15425.0], [1946.0, 15657.0], [1938.0, 12142.0], [2034.0, 15288.0], [2042.0, 15284.0], [1994.0, 12132.0], [2026.0, 12721.0], [2018.0, 11942.5], [2010.0, 11957.0], [2002.0, 11932.0], [2068.0, 15212.5], [2148.0, 11293.0], [2052.0, 15278.666666666666], [2132.0, 11431.166666666666], [2100.0, 15205.0], [2084.0, 15255.0], [2292.0, 11709.0], [2276.0, 11893.0], [2228.0, 12002.0], [2212.0, 11124.0], [2196.0, 11078.25], [2324.0, 11791.0], [2420.0, 11106.0], [2308.0, 11712.0], [2388.0, 10342.0], [2372.0, 8556.0], [2356.0, 11480.0], [2340.0, 8696.0], [2516.0, 7765.5], [2500.0, 12618.5], [2484.0, 8757.75], [2468.0, 8243.0], [2452.0, 7814.0], [2436.0, 10178.0], [2660.0, 9130.75], [2580.0, 3223.529411764706], [2564.0, 7590.0], [2612.0, 7728.0], [2628.0, 10663.0], [2644.0, 11274.5], [2788.0, 8065.0], [2804.0, 8036.0], [2756.0, 10486.0], [2708.0, 9396.0], [2692.0, 7534.0], [2772.0, 11757.0], [2916.0, 10072.5], [2852.0, 7863.0], [2900.0, 7748.5], [2884.0, 7853.0], [3012.0, 7639.0], [3060.0, 7552.75], [2948.0, 8069.0], [2996.0, 7657.0], [2980.0, 8357.5], [3076.0, 9257.666666666666], [3108.0, 7828.5], [3156.0, 7640.0], [3140.0, 8232.0], [3300.0, 8308.5], [3204.0, 7424.0], [3220.0, 7697.5], [3268.0, 7944.0], [3444.0, 6066.0], [3348.0, 8109.0], [3332.0, 8107.666666666667], [3380.0, 7052.0], [3364.0, 6071.0], [3396.0, 8066.0], [3556.0, 9193.333333333334], [3460.0, 8016.0], [3476.0, 7996.0], [3508.0, 8465.0], [3540.0, 8043.0], [3524.0, 8155.0], [3604.0, 7901.5], [3588.0, 8005.0], [3652.0, 8017.0], [3636.0, 4887.0], [3620.0, 8343.0], [3812.0, 7284.25], [3828.0, 6433.333333333333], [3732.0, 7729.0], [3764.0, 4696.0], [3748.0, 9027.0], [3796.0, 7515.0], [3940.0, 6904.0], [3860.0, 8969.0], [3892.0, 4080.0], [4036.0, 4092.0], [4052.0, 5354.0], [3988.0, 4085.0], [4020.0, 4185.0], [4004.0, 4245.0], [4328.0, 4597.666666666667], [4232.0, 7569.0], [4296.0, 6057.333333333333], [4104.0, 5061.0], [4136.0, 5106.0], [4200.0, 8996.0], [4584.0, 1832.0], [4488.0, 5229.0], [4520.0, 5108.0], [4552.0, 3250.0], [4424.0, 2389.0], [4648.0, 5581.0], [4712.0, 5215.0], [4233.0, 7552.0], [4329.0, 3094.0], [4265.0, 4149.0], [4297.0, 3182.0], [4105.0, 3240.0], [4137.0, 5252.0], [4169.0, 5176.0], [4489.0, 5303.0], [4361.0, 4886.5], [4425.0, 2377.0], [4649.0, 5555.0], [4713.0, 5203.0], [2165.0, 12438.0], [2149.0, 15208.0], [2133.0, 11519.0], [2117.0, 11974.25], [2101.0, 15186.0], [2085.0, 15242.0], [2277.0, 10804.0], [2293.0, 8997.0], [2181.0, 11157.5], [2261.0, 10852.0], [2245.0, 10974.5], [2229.0, 15037.0], [2213.0, 11105.0], [2421.0, 10951.0], [2405.0, 12859.0], [2325.0, 11687.0], [2373.0, 8540.0], [2357.0, 14491.0], [2341.0, 11672.0], [2517.0, 8154.0], [2485.0, 7802.0], [2469.0, 7977.714285714286], [2453.0, 7761.0], [2629.0, 10685.0], [2661.0, 11117.0], [2565.0, 12879.0], [2805.0, 8013.0], [2757.0, 8182.0], [2789.0, 7951.0], [2693.0, 7561.0], [2821.0, 11597.333333333334], [2933.0, 11315.0], [2837.0, 12209.0], [2869.0, 10707.0], [2853.0, 9365.0], [3061.0, 7544.0], [3013.0, 10170.0], [2965.0, 8681.0], [2949.0, 8076.0], [3029.0, 7921.5], [2997.0, 7669.0], [2981.0, 8021.0], [3173.0, 10449.5], [3189.0, 6369.0], [3141.0, 8175.0], [3125.0, 7877.5], [3109.0, 8832.0], [3317.0, 7931.333333333333], [3269.0, 7892.0], [3301.0, 6067.0], [3205.0, 8477.0], [3253.0, 7605.333333333333], [3445.0, 5991.0], [3397.0, 7985.0], [3349.0, 7606.0], [3381.0, 6026.0], [3365.0, 6059.0], [3413.0, 6162.5], [3557.0, 5287.0], [3461.0, 5968.0], [3477.0, 7996.0], [3493.0, 8159.5], [3541.0, 6824.0], [3525.0, 7691.0], [3653.0, 8387.0], [3669.0, 7884.0], [3605.0, 4932.0], [3829.0, 4509.0], [3813.0, 4551.0], [3733.0, 9425.666666666666], [3749.0, 8796.0], [3797.0, 7486.0], [3957.0, 5041.0], [3909.0, 4776.666666666667], [3941.0, 6061.0], [3893.0, 6033.0], [3877.0, 4220.333333333333], [4069.0, 5644.5], [4037.0, 4115.0], [4053.0, 5419.0], [4085.0, 8347.5], [3973.0, 5180.0], [3989.0, 4258.0], [4021.0, 4212.0], [4005.0, 5485.0], [4234.0, 5679.0], [4106.0, 8083.0], [4202.0, 4820.0], [4170.0, 4675.5], [4586.0, 1787.5], [4490.0, 2644.0], [4554.0, 5142.5], [4618.0, 4643.666666666667], [4650.0, 5906.0], [4682.0, 5407.0], [4299.0, 5257.5], [4331.0, 4298.0], [4235.0, 7538.0], [4267.0, 4970.5], [4107.0, 8037.0], [4139.0, 6866.5], [4203.0, 5157.0], [4171.0, 4174.0], [4523.0, 3887.0], [4587.0, 5160.0], [4555.0, 3264.0], [4363.0, 2651.0], [4459.0, 4491.374999999999], [4619.0, 5663.0], [4715.0, 5475.5], [4651.0, 6419.0], [4683.0, 6059.0], [1059.0, 1954.0], [1027.0, 6551.333333333333], [1067.0, 12128.5], [1035.0, 2069.5], [1051.0, 1983.0], [1043.0, 2063.0], [1075.0, 1764.0], [1083.0, 15590.0], [1131.0, 15462.0], [1123.0, 15437.0], [1115.0, 15549.142857142859], [1099.0, 15518.0], [1091.0, 15506.0], [1203.0, 15302.333333333334], [1179.0, 15042.0], [1275.0, 14053.0], [1267.0, 14015.0], [1259.0, 12037.0], [1251.0, 12002.0], [1227.0, 15241.5], [1243.0, 12335.0], [1235.0, 16009.666666666668], [1339.0, 14425.0], [1331.0, 12250.0], [1323.0, 12235.0], [1315.0, 14825.0], [1283.0, 14729.0], [1291.0, 14109.0], [1307.0, 14727.0], [1299.0, 14871.0], [1403.0, 11854.0], [1395.0, 14866.0], [1387.0, 14756.0], [1379.0, 11918.0], [1347.0, 13208.5], [1355.0, 11979.0], [1371.0, 14635.0], [1363.0, 13068.2], [1467.0, 12041.0], [1459.0, 14845.5], [1451.0, 12660.333333333334], [1443.0, 11937.0], [1411.0, 11873.0], [1419.0, 14883.0], [1435.0, 11821.0], [1427.0, 11810.0], [1483.0, 11845.0], [1523.0, 14379.0], [1475.0, 11768.0], [1515.0, 14098.0], [1507.0, 14068.0], [1499.0, 14053.0], [1491.0, 14100.0], [1595.0, 11728.0], [1587.0, 11666.0], [1579.0, 11576.0], [1571.0, 13547.0], [1539.0, 15149.333333333334], [1547.0, 11708.0], [1563.0, 13538.0], [1555.0, 13870.0], [1659.0, 14218.0], [1651.0, 14208.0], [1643.0, 11656.0], [1635.0, 11303.0], [1603.0, 11422.0], [1611.0, 11600.0], [1627.0, 13468.0], [1619.0, 13419.0], [1723.0, 13964.0], [1715.0, 11411.0], [1707.0, 11371.0], [1699.0, 11449.0], [1667.0, 14460.0], [1675.0, 11486.0], [1691.0, 11561.0], [1683.0, 11558.0], [1787.0, 12425.0], [1779.0, 12435.0], [1771.0, 12329.5], [1763.0, 12315.0], [1731.0, 13950.0], [1739.0, 13690.0], [1755.0, 11578.0], [1747.0, 14022.0], [1803.0, 13472.0], [1851.0, 12256.0], [1795.0, 11501.0], [1819.0, 11468.0], [1811.0, 11046.0], [1843.0, 12175.0], [1835.0, 12195.0], [1827.0, 11531.0], [1907.0, 14058.0], [1915.0, 11667.0], [1867.0, 12345.0], [1859.0, 12303.0], [1899.0, 11079.0], [1891.0, 11091.0], [1883.0, 12118.0], [1875.0, 12331.0], [1971.0, 15434.0], [1979.0, 15438.0], [1931.0, 12096.0], [1923.0, 11664.0], [1963.0, 14061.0], [1947.0, 12763.0], [1939.0, 12098.0], [2043.0, 15264.0], [2035.0, 15386.0], [1987.0, 13661.0], [2019.0, 13968.0], [2011.0, 11917.0], [2003.0, 11897.0], [2166.0, 11177.0], [2054.0, 15271.5], [2102.0, 15134.0], [2086.0, 15237.0], [2294.0, 11881.0], [2262.0, 10877.0], [2230.0, 10890.0], [2214.0, 11127.0], [2406.0, 12174.0], [2390.0, 8294.5], [2342.0, 8710.0], [2326.0, 11643.0], [2550.0, 9552.333333333334], [2534.0, 8264.4], [2518.0, 13011.0], [2502.0, 13759.0], [2470.0, 7792.0], [2454.0, 7821.0], [2438.0, 7770.5], [2582.0, 7571.333333333333], [2678.0, 10376.833333333332], [2566.0, 7563.0], [2614.0, 7796.5], [2598.0, 11097.0], [2646.0, 10715.5], [2630.0, 7602.0], [2806.0, 8027.0], [2790.0, 7961.0], [2710.0, 9396.0], [2742.0, 9529.333333333334], [2918.0, 10052.5], [2902.0, 10162.5], [2934.0, 7656.0], [2838.0, 12246.0], [2870.0, 7829.0], [2854.0, 8698.0], [2950.0, 10017.0], [3014.0, 7546.0], [2982.0, 7984.0], [3190.0, 7125.0], [3174.0, 7077.0], [3094.0, 8051.0], [3110.0, 8225.0], [3158.0, 8719.5], [3318.0, 7787.0], [3302.0, 8706.0], [3270.0, 7925.0], [3286.0, 9757.666666666666], [3206.0, 8563.0], [3254.0, 11052.0], [3238.0, 8849.666666666666], [3430.0, 6052.333333333333], [3350.0, 8114.0], [3382.0, 5985.0], [3366.0, 8465.0], [3414.0, 6177.0], [3526.0, 8123.0], [3574.0, 7499.0], [3558.0, 8063.0], [3462.0, 8034.0], [3510.0, 8125.0], [3542.0, 8179.0], [3686.0, 8941.0], [3606.0, 7786.0], [3670.0, 7894.0], [3638.0, 4884.0], [3622.0, 8059.0], [3814.0, 4575.0], [3830.0, 6182.0], [3734.0, 7439.0], [3718.0, 7816.72], [3798.0, 7527.0], [3766.0, 4656.0], [3750.0, 8808.0], [3926.0, 4084.8], [3958.0, 8242.0], [3942.0, 6887.0], [3862.0, 8104.5], [3846.0, 8038.25], [3894.0, 4191.0], [4086.0, 4057.0], [4038.0, 4126.0], [4054.0, 7353.0], [3990.0, 7295.0], [4022.0, 4230.0], [4236.0, 4290.0], [4332.0, 4503.0], [4268.0, 5838.0], [4108.0, 8071.0], [4140.0, 8458.0], [4204.0, 5177.0], [4172.0, 5238.0], [4492.0, 3936.5], [4524.0, 1596.0], [4588.0, 3240.0], [4396.0, 6855.2], [4460.0, 4664.0], [4620.0, 4147.0], [4652.0, 5559.0], [4716.0, 5745.0], [4333.0, 8097.0], [4109.0, 8028.0], [4141.0, 8534.0], [4205.0, 5084.0], [4557.0, 4012.5], [4589.0, 1850.0], [4493.0, 2903.0], [4525.0, 3733.0], [4365.0, 4874.5], [4397.0, 5976.0], [4461.0, 4579.0], [4429.0, 3503.5], [4621.0, 4675.0], [4653.0, 5821.0], [2167.0, 11164.0], [2151.0, 13222.5], [2119.0, 11605.5], [2103.0, 15238.0], [2055.0, 15255.0], [2295.0, 11692.0], [2183.0, 13543.5], [2263.0, 10836.0], [2247.0, 9197.0], [2231.0, 11067.0], [2215.0, 11118.0], [2391.0, 14124.0], [2375.0, 8564.5], [2343.0, 14432.0], [2327.0, 14596.0], [2551.0, 7780.0], [2535.0, 8773.0], [2519.0, 7798.0], [2471.0, 10443.0], [2455.0, 7814.0], [2663.0, 10856.5], [2583.0, 7533.0], [2679.0, 10248.0], [2567.0, 7583.0], [2647.0, 10847.0], [2615.0, 12784.0], [2599.0, 7893.0], [2695.0, 7577.5], [2711.0, 8415.0], [2743.0, 10430.0], [2727.0, 8271.333333333332], [2775.0, 8711.333333333334], [2823.0, 10713.0], [2919.0, 11338.0], [2887.0, 9942.666666666666], [2871.0, 12707.0], [2855.0, 7864.0], [3063.0, 7562.0], [3047.0, 7578.5], [2951.0, 8066.0], [3031.0, 10931.0], [2999.0, 8004.5], [3095.0, 7580.0], [3175.0, 8622.0], [3079.0, 10015.0], [3127.0, 9750.0], [3111.0, 9862.0], [3159.0, 7080.0], [3303.0, 7496.0], [3319.0, 9307.0], [3271.0, 10416.0], [3255.0, 7636.0], [3239.0, 10659.0], [3351.0, 9963.0], [3383.0, 6017.0], [3415.0, 6170.0], [3399.0, 8085.5], [3575.0, 4981.0], [3527.0, 8151.0], [3559.0, 6734.0], [3463.0, 7806.0], [3511.0, 8156.0], [3495.0, 7773.0], [3543.0, 8170.0], [3607.0, 8961.0], [3687.0, 4977.0], [3639.0, 7851.0], [3623.0, 6621.0], [3831.0, 7414.0], [3815.0, 7210.0], [3735.0, 7476.0], [3719.0, 8755.0], [3943.0, 6875.0], [3911.0, 5083.0], [3847.0, 7704.0], [3863.0, 10123.0], [3879.0, 4708.0], [4039.0, 8101.0], [4055.0, 5545.0], [4071.0, 8368.5], [4023.0, 4228.0], [4007.0, 4284.0], [4238.0, 6531.5], [4270.0, 4381.0], [4334.0, 8507.0], [4142.0, 8482.0], [4110.0, 5206.0], [4174.0, 4196.0], [4590.0, 1827.0], [4526.0, 1526.0], [4558.0, 3458.0], [4398.0, 7553.0], [4462.0, 4653.0], [4430.0, 3009.0], [4239.0, 7522.0], [4335.0, 4241.0], [4271.0, 7385.0], [4111.0, 8015.0], [4143.0, 8497.0], [4207.0, 5079.0], [4175.0, 4211.0], [4591.0, 3140.0], [4495.0, 4926.5], [4527.0, 5124.0], [4367.0, 3559.5], [4399.0, 4487.0], [4463.0, 4661.0], [4623.0, 3976.5], [4655.0, 5987.5], [267.0, 21133.0], [263.0, 21260.0], [259.0, 21235.0], [257.0, 21144.0], [287.0, 22147.0], [285.0, 19777.0], [283.0, 22473.0], [281.0, 21264.666666666668], [277.0, 21138.0], [275.0, 21210.0], [303.0, 20117.0], [301.0, 20174.0], [299.0, 20196.0], [297.0, 20621.0], [295.0, 20635.0], [293.0, 20636.0], [291.0, 20221.0], [289.0, 20221.0], [317.0, 10914.0], [319.0, 20008.0], [315.0, 20053.0], [313.0, 20497.0], [311.0, 20512.0], [309.0, 20071.0], [307.0, 20078.0], [305.0, 21397.0], [333.0, 10339.5], [323.0, 11042.5], [335.0, 5423.0], [331.0, 10409.5], [327.0, 10418.5], [325.0, 10186.5], [329.0, 19325.0], [321.0, 21258.0], [349.0, 5266.25], [351.0, 6867.333333333333], [345.0, 10380.5], [347.0, 19297.0], [343.0, 19306.0], [341.0, 20306.0], [339.0, 20326.0], [337.0, 20366.0], [367.0, 15158.0], [365.0, 19541.0], [363.0, 19702.0], [361.0, 19556.0], [359.0, 19552.0], [357.0, 15308.0], [355.0, 19682.0], [353.0, 19557.0], [383.0, 15220.0], [381.0, 15145.0], [377.0, 15210.0], [375.0, 15179.0], [369.0, 15180.0], [387.0, 17188.0], [399.0, 19332.0], [385.0, 19192.0], [415.0, 6913.333333333333], [413.0, 19367.0], [411.0, 18447.0], [409.0, 19459.0], [407.0, 18520.0], [401.0, 19335.0], [403.0, 19321.0], [405.0, 19278.0], [417.0, 19290.0], [421.0, 6471.0], [419.0, 3607.0], [431.0, 15173.5], [429.0, 15155.0], [427.0, 15149.333333333334], [423.0, 19854.0], [435.0, 15205.0], [445.0, 15287.0], [433.0, 15294.0], [443.0, 15265.0], [441.0, 15276.0], [439.0, 15206.0], [437.0, 15216.5], [459.0, 19682.0], [457.0, 15309.0], [455.0, 15320.0], [453.0, 15293.0], [451.0, 15320.0], [449.0, 15207.0], [477.0, 15242.0], [475.0, 15295.5], [473.0, 15290.0], [469.0, 15224.0], [467.0, 15284.0], [495.0, 15173.0], [485.0, 15251.0], [483.0, 15194.666666666666], [511.0, 16611.0], [497.0, 15186.0], [505.0, 16708.0], [503.0, 19529.0], [501.0, 19194.0], [542.0, 15163.0], [530.0, 15179.5], [526.0, 15196.0], [522.0, 15176.0], [566.0, 15216.0], [562.0, 15204.0], [558.0, 15096.0], [546.0, 15374.0], [550.0, 15351.0], [582.0, 19581.0], [602.0, 10242.0], [590.0, 8027.0], [578.0, 19612.0], [598.0, 19495.0], [594.0, 19492.0], [586.0, 19542.0], [634.0, 15657.0], [614.0, 15587.0], [626.0, 15579.0], [618.0, 15597.0], [646.0, 19410.0], [642.0, 15545.333333333332], [702.0, 15629.0], [698.0, 15530.333333333334], [674.0, 15479.0], [734.0, 15637.0], [726.0, 15654.0], [718.0, 15553.5], [714.0, 15462.0], [762.0, 1418.0], [766.0, 15452.5], [758.0, 15428.0], [746.0, 15431.0], [770.0, 8405.5], [794.0, 15333.0], [786.0, 15364.0], [778.0, 15397.0], [774.0, 15420.333333333334], [830.0, 11291.0], [814.0, 1637.6666666666667], [810.0, 15525.0], [818.0, 15488.0], [822.0, 1621.0], [838.0, 1567.0], [834.0, 16017.0], [846.0, 15356.5], [862.0, 15365.75], [858.0, 15453.0], [850.0, 15443.0], [890.0, 15266.0], [878.0, 15469.0], [874.0, 15340.0], [870.0, 15395.428571428572], [926.0, 15356.5], [918.0, 15423.0], [914.0, 15576.0], [906.0, 15282.0], [898.0, 15198.4], [934.0, 15313.0], [954.0, 15768.0], [958.0, 15730.333333333334], [946.0, 15368.333333333334], [942.0, 15371.0], [930.0, 15834.0], [966.0, 15351.0], [986.0, 15286.0], [978.0, 15330.0], [974.0, 15301.0], [970.0, 15706.0], [962.0, 15357.0], [1022.0, 15620.0], [1018.0, 5916.0], [994.0, 15229.0], [1014.0, 12626.6], [1010.0, 15709.0], [1060.0, 1935.6666666666667], [1068.0, 1927.0], [1076.0, 8705.7], [1052.0, 15607.0], [1028.0, 1985.0], [1036.0, 10935.666666666666], [1044.0, 8802.0], [1148.0, 16513.0], [1132.0, 15475.0], [1092.0, 15456.0], [1212.0, 15273.0], [1164.0, 15453.0], [1196.0, 15567.0], [1188.0, 15464.0], [1180.0, 12049.0], [1172.0, 15418.0], [1276.0, 14078.0], [1268.0, 14043.0], [1260.0, 12027.0], [1252.0, 12268.0], [1244.0, 12386.0], [1220.0, 15917.333333333334], [1340.0, 14361.0], [1332.0, 16954.0], [1324.0, 11994.0], [1316.0, 11990.0], [1308.0, 14743.0], [1284.0, 14782.0], [1292.0, 14399.0], [1300.0, 14383.0], [1404.0, 11864.0], [1396.0, 14880.0], [1388.0, 14871.0], [1380.0, 14739.0], [1372.0, 14684.0], [1348.0, 14310.0], [1356.0, 14634.0], [1364.0, 11926.0], [1468.0, 11754.0], [1460.0, 11801.0], [1444.0, 11926.0], [1436.0, 11833.0], [1412.0, 11831.0], [1420.0, 12115.0], [1428.0, 11825.0], [1532.0, 14381.0], [1524.0, 11537.0], [1516.0, 14322.0], [1508.0, 14107.0], [1500.0, 14065.0], [1476.0, 11787.0], [1484.0, 13045.0], [1492.0, 13574.0], [1596.0, 14594.0], [1588.0, 11743.0], [1580.0, 11702.0], [1572.0, 13548.0], [1564.0, 13584.0], [1540.0, 13546.0], [1548.0, 13557.0], [1556.0, 13572.0], [1604.0, 11578.0], [1612.0, 11626.0], [1620.0, 13459.0], [1660.0, 14455.0], [1652.0, 14238.0], [1644.0, 14174.0], [1636.0, 11325.0], [1724.0, 13728.0], [1716.0, 14007.0], [1708.0, 11486.0], [1700.0, 13658.0], [1692.0, 14411.0], [1668.0, 11582.0], [1676.0, 11489.0], [1684.0, 11457.0], [1788.0, 11504.0], [1780.0, 12392.0], [1772.0, 14328.0], [1764.0, 12434.0], [1756.0, 11648.0], [1732.0, 13689.0], [1740.0, 13960.0], [1748.0, 14049.0], [1796.0, 11574.0], [1804.0, 11232.0], [1820.0, 11482.0], [1812.0, 11233.0], [1852.0, 12231.0], [1844.0, 12240.0], [1836.0, 11477.0], [1828.0, 11514.0], [1916.0, 11314.0], [1908.0, 14084.0], [1900.0, 10907.0], [1892.0, 11098.0], [1884.0, 12101.0], [1860.0, 12309.0], [1868.0, 14365.0], [1876.0, 12482.0], [1972.0, 15497.0], [1932.0, 12102.0], [1980.0, 11668.5], [1924.0, 12122.0], [1964.0, 12073.0], [1948.0, 15626.0], [1940.0, 12093.0], [2028.0, 14009.5], [2020.0, 11947.0], [2012.0, 11967.0], [1988.0, 13887.0], [2004.0, 11952.0], [1996.0, 12037.0], [2168.0, 11182.0], [2152.0, 11259.0], [2136.0, 11453.0], [2120.0, 10687.0], [2104.0, 15307.0], [2088.0, 15195.5], [2280.0, 11868.0], [2296.0, 11846.0], [2200.0, 11148.5], [2264.0, 10845.0], [2248.0, 10969.0], [2232.0, 9930.0], [2216.0, 11091.0], [2424.0, 10085.666666666666], [2408.0, 8163.0], [2392.0, 11294.0], [2360.0, 10837.0], [2328.0, 9487.0], [2344.0, 14431.0], [2552.0, 7610.0], [2536.0, 7870.0], [2520.0, 8826.0], [2488.0, 9770.666666666666], [2568.0, 7572.0], [2616.0, 7727.0], [2600.0, 7620.0], [2584.0, 7735.0], [2648.0, 10583.0], [2632.0, 9124.0], [2792.0, 7964.5], [2712.0, 8419.0], [2888.0, 11392.0], [2872.0, 7781.0], [2856.0, 7858.0], [3048.0, 7559.0], [3064.0, 7558.0], [2968.0, 7278.333333333333], [2984.0, 8329.5], [3032.0, 7633.0], [3016.0, 7581.0], [3176.0, 8579.0], [3080.0, 8520.75], [3304.0, 7492.0], [3320.0, 7804.0], [3208.0, 8541.0], [3224.0, 7737.75], [3240.0, 9170.0], [3288.0, 10862.0], [3272.0, 8374.0], [3384.0, 6304.0], [3432.0, 5994.0], [3368.0, 9030.5], [3416.0, 6145.0], [3560.0, 5005.0], [3464.0, 5934.0], [3512.0, 8424.0], [3544.0, 6808.0], [3672.0, 8314.666666666666], [3640.0, 8377.0], [3832.0, 7197.0], [3816.0, 7509.0], [3720.0, 4778.0], [3736.0, 7420.0], [3752.0, 6730.5], [3800.0, 7472.5], [3864.0, 5122.0], [3944.0, 6891.0], [3928.0, 4116.5], [3848.0, 6114.0], [3896.0, 6014.5], [3880.0, 5173.0], [4040.0, 4145.0], [4056.0, 7376.0], [3976.0, 5414.666666666667], [3992.0, 5874.0], [4024.0, 4252.0], [4304.0, 4116.8], [4272.0, 7372.0], [4112.0, 5197.0], [4144.0, 7491.0], [4208.0, 4436.0], [4176.0, 5058.0], [4560.0, 3748.0], [4496.0, 5213.0], [4528.0, 5114.0], [4400.0, 5092.0], [4464.0, 4641.0], [4432.0, 2699.5], [4720.0, 5719.0], [4656.0, 5453.0], [4241.0, 7514.5], [4273.0, 7398.0], [4337.0, 3502.5], [4305.0, 5395.0], [4113.0, 5244.0], [4145.0, 8454.0], [4209.0, 5081.0], [4593.0, 6001.0], [4529.0, 5481.0], [4369.0, 4124.5], [4433.0, 1910.0], [4721.0, 4786.0], [4625.0, 4680.0], [4657.0, 6320.0], [2169.0, 11173.0], [2153.0, 15179.0], [2105.0, 12389.0], [2089.0, 15195.0], [2057.0, 15402.0], [2281.0, 10796.0], [2265.0, 9815.0], [2249.0, 10961.0], [2233.0, 10887.0], [2217.0, 9966.0], [2201.0, 11066.0], [2409.0, 8132.0], [2393.0, 11540.0], [2553.0, 7626.0], [2521.0, 7859.0], [2505.0, 9509.5], [2473.0, 10530.5], [2585.0, 7580.0], [2681.0, 10837.0], [2569.0, 11295.0], [2649.0, 10691.0], [2633.0, 10686.0], [2617.0, 10701.0], [2601.0, 7720.0], [2713.0, 10400.0], [2697.0, 10119.0], [2809.0, 11648.333333333334], [2745.0, 10456.5], [2729.0, 9647.5], [2777.0, 8143.0], [2761.0, 8557.5], [2937.0, 10932.333333333334], [2921.0, 11335.5], [2905.0, 7721.666666666667], [2889.0, 9933.0], [2841.0, 10841.0], [2857.0, 7860.0], [3065.0, 10018.0], [2969.0, 6570.0], [2953.0, 10139.5], [3145.0, 9909.75], [3193.0, 8385.333333333334], [3129.0, 10558.0], [3161.0, 7032.0], [3305.0, 7616.0], [3321.0, 8611.0], [3257.0, 9403.0], [3289.0, 8605.0], [3433.0, 6022.0], [3385.0, 6319.0], [3369.0, 6072.0], [3417.0, 6102.0], [3401.0, 8051.0], [3465.0, 11356.0], [3481.0, 7476.0], [3497.0, 7730.5], [3545.0, 8277.0], [3657.0, 7779.25], [3609.0, 7262.0], [3641.0, 9351.0], [3625.0, 8246.0], [3833.0, 4497.0], [3817.0, 7492.0], [3769.0, 7808.666666666667], [3753.0, 4722.0], [3801.0, 7483.0], [3929.0, 4030.0], [3897.0, 4086.0], [4089.0, 5027.666666666667], [4041.0, 5645.0], [4057.0, 5342.0], [4025.0, 4263.0], [4338.0, 2740.0], [4306.0, 5410.0], [4242.0, 7536.0], [4146.0, 8510.0], [4114.0, 5222.0], [4210.0, 5772.0], [4274.0, 7381.0], [4562.0, 3434.5], [4498.0, 5223.0], [4530.0, 3319.0], [4402.0, 5658.0], [4466.0, 4642.0], [4434.0, 1901.0], [4626.0, 4411.0], [4658.0, 5099.0], [4690.0, 5040.0], [4243.0, 7533.0], [4275.0, 7355.0], [4115.0, 5236.0], [4147.0, 7516.0], [4211.0, 7650.0], [4179.0, 4155.666666666667], [4595.0, 4214.0], [4531.0, 3208.0], [4563.0, 4830.0], [4371.0, 5563.0], [4403.0, 4368.0], [4467.0, 4672.0], [4435.0, 6712.0], [4627.0, 5649.0], [4691.0, 5292.142857142857], [1077.0, 1778.25], [1029.0, 12273.75], [1061.0, 1940.0], [1037.0, 1297.0], [1053.0, 6552.666666666667], [1045.0, 11082.0], [1069.0, 1876.0], [1149.0, 16317.0], [1141.0, 16498.25], [1133.0, 15418.0], [1117.0, 15480.0], [1093.0, 15472.0], [1213.0, 15466.0], [1205.0, 16033.5], [1197.0, 15223.0], [1189.0, 15511.0], [1173.0, 15396.0], [1165.0, 15466.0], [1277.0, 14081.0], [1269.0, 11964.0], [1261.0, 12014.0], [1253.0, 12005.0], [1229.0, 15216.5], [1237.0, 15946.5], [1341.0, 14337.0], [1333.0, 12038.0], [1325.0, 12022.0], [1317.0, 12297.0], [1309.0, 14801.0], [1285.0, 14743.0], [1293.0, 14088.0], [1301.0, 14744.0], [1405.0, 11890.0], [1397.0, 12111.0], [1389.0, 14862.0], [1381.0, 14689.0], [1373.0, 14641.0], [1357.0, 14624.0], [1349.0, 11956.0], [1365.0, 14637.0], [1469.0, 11884.0], [1461.0, 14121.0], [1453.0, 12515.333333333334], [1445.0, 11926.0], [1437.0, 11964.0], [1413.0, 14189.0], [1421.0, 12041.0], [1429.0, 12020.0], [1485.0, 13580.0], [1477.0, 11803.0], [1517.0, 14325.0], [1509.0, 14091.0], [1501.0, 11844.0], [1493.0, 11886.0], [1597.0, 11605.0], [1581.0, 6943.0], [1589.0, 11640.0], [1549.0, 13547.0], [1541.0, 13908.0], [1573.0, 11858.0], [1565.0, 13492.0], [1557.0, 13562.0], [1661.0, 14234.0], [1653.0, 14232.0], [1645.0, 14216.0], [1637.0, 11364.0], [1621.0, 13447.0], [1613.0, 11607.0], [1605.0, 14590.0], [1725.0, 13629.0], [1717.0, 13644.0], [1709.0, 11423.0], [1701.0, 11402.0], [1693.0, 11435.0], [1669.0, 11612.0], [1677.0, 11542.0], [1685.0, 11587.0], [1789.0, 11532.0], [1781.0, 12417.0], [1773.0, 12288.0], [1765.0, 12369.0], [1733.0, 13764.0], [1741.0, 13968.0], [1749.0, 14057.0], [1853.0, 12270.0], [1845.0, 12259.0], [1837.0, 11478.0], [1829.0, 14232.0], [1821.0, 11605.0], [1797.0, 11580.0], [1805.0, 11235.0], [1813.0, 11467.0], [1917.0, 11642.0], [1909.0, 14106.0], [1901.0, 11069.0], [1893.0, 12167.0], [1885.0, 12097.0], [1861.0, 12323.0], [1869.0, 12437.0], [1877.0, 12335.0], [1981.0, 11908.0], [1965.0, 12052.0], [1957.0, 15505.0], [1941.0, 11927.0], [1933.0, 12101.0], [1925.0, 12152.0], [1997.0, 11873.0], [2037.0, 15354.5], [1989.0, 11975.0], [2029.0, 15395.0], [2021.0, 11960.0], [2013.0, 11942.0], [2005.0, 11918.0], [2170.0, 10261.0], [2154.0, 15166.0], [2122.0, 12853.0], [2106.0, 15104.0], [2074.0, 15350.833333333332], [2282.0, 10471.333333333334], [2186.0, 15087.666666666666], [2250.0, 9177.0], [2234.0, 9936.0], [2426.0, 11309.5], [2410.0, 12389.0], [2394.0, 8303.0], [2378.0, 8559.0], [2314.0, 10331.0], [2458.0, 9691.0], [2554.0, 12946.0], [2538.0, 7842.5], [2490.0, 7845.0], [2474.0, 7766.0], [2586.0, 13559.0], [2570.0, 7513.0], [2650.0, 10685.0], [2634.0, 7640.0], [2794.0, 7971.5], [2810.0, 8111.0], [2714.0, 8978.0], [2698.0, 7561.0], [2778.0, 8102.0], [2762.0, 10501.0], [2746.0, 10508.0], [2938.0, 11315.0], [2890.0, 9964.0], [2922.0, 11338.0], [2842.0, 8961.0], [2874.0, 7865.5], [2858.0, 7862.0], [2906.0, 7747.0], [2954.0, 10031.0], [3034.0, 7565.0], [3018.0, 8314.5], [3002.0, 8846.0], [2986.0, 7826.0], [3178.0, 8591.5], [3098.0, 8723.333333333334], [3130.0, 9869.0], [3114.0, 9700.666666666666], [3162.0, 8684.0], [3322.0, 8069.0], [3306.0, 7498.0], [3226.0, 7762.0], [3210.0, 7030.0], [3258.0, 7956.0], [3290.0, 7448.0], [3402.0, 6190.0], [3354.0, 8086.333333333333], [3370.0, 6082.0], [3418.0, 6196.0], [3578.0, 7975.666666666667], [3562.0, 6639.5], [3530.0, 8224.333333333334], [3466.0, 7989.0], [3482.0, 5873.0], [3498.0, 8144.0], [3546.0, 8163.0], [3690.0, 4958.5], [3594.0, 7316.333333333333], [3674.0, 8686.5], [3642.0, 8094.0], [3626.0, 8227.5], [3834.0, 7713.0], [3738.0, 8104.5], [3722.0, 8275.0], [3786.0, 7453.142857142857], [3770.0, 7981.0], [3914.0, 6151.0], [3962.0, 7432.25], [3898.0, 4111.0], [3882.0, 5148.5], [4042.0, 8303.0], [4058.0, 7887.0], [4090.0, 4031.0], [4074.0, 7680.333333333333], [3978.0, 5883.5], [4026.0, 4250.0], [4244.0, 7527.0], [4308.0, 4273.0], [4276.0, 7395.0], [4116.0, 5216.0], [4148.0, 7526.0], [4212.0, 4111.0], [4180.0, 4224.0], [4500.0, 5221.0], [4532.0, 3223.0], [4564.0, 3265.0], [4404.0, 4355.0], [4468.0, 2988.0], [4436.0, 4104.0], [4660.0, 6255.0], [4692.0, 4998.0], [4341.0, 2725.3333333333335], [4245.0, 4253.0], [4309.0, 3728.0], [4117.0, 3699.0], [4213.0, 4113.0], [4181.0, 4146.0], [4565.0, 3444.0], [4501.0, 4653.0], [4373.0, 3321.5], [4405.0, 4365.0], [4469.0, 2947.0], [4437.0, 4107.0], [4629.0, 6634.5], [4661.0, 5824.0], [4693.0, 5993.0], [2171.0, 15108.0], [2155.0, 15160.0], [2091.0, 15217.5], [2059.0, 15265.5], [2299.0, 9839.0], [2187.0, 11150.0], [2267.0, 10827.0], [2251.0, 10964.0], [2219.0, 11967.0], [2427.0, 13173.0], [2411.0, 12370.0], [2315.0, 9767.0], [2347.0, 10579.333333333334], [2331.0, 11537.0], [2555.0, 7589.0], [2523.0, 9655.0], [2507.0, 10855.0], [2491.0, 7836.0], [2635.0, 10660.0], [2651.0, 12863.0], [2603.0, 11891.5], [2699.0, 12663.0], [2747.0, 10476.0], [2731.0, 9378.0], [2779.0, 8016.0], [2827.0, 8587.0], [2891.0, 11378.0], [2971.0, 6590.5], [3019.0, 8971.0], [3035.0, 7550.0], [3003.0, 7993.0], [3179.0, 8602.0], [3131.0, 9033.0], [3099.0, 7511.0], [3115.0, 9889.0], [3147.0, 9146.5], [3275.0, 8073.666666666667], [3323.0, 8084.0], [3307.0, 9824.0], [3259.0, 10466.0], [3435.0, 6016.0], [3339.0, 9394.5], [3355.0, 11097.0], [3387.0, 7150.5], [3419.0, 6087.0], [3483.0, 7959.0], [3531.0, 8150.0], [3563.0, 5048.0], [3515.0, 8426.333333333334], [3547.0, 8229.0], [3595.0, 7811.0], [3643.0, 9356.0], [3835.0, 7730.0], [3739.0, 7392.0], [3787.0, 7469.0], [3723.0, 7506.0], [3771.0, 7433.0], [3755.0, 4644.0], [3803.0, 7487.5], [3947.0, 5580.666666666667], [3931.0, 4084.5], [3963.0, 6909.0], [3851.0, 7122.666666666667], [3867.0, 6318.333333333333], [4091.0, 7539.0], [4043.0, 3870.0], [4059.0, 7092.0], [4075.0, 8911.0], [3979.0, 5642.0], [3995.0, 4263.333333333333], [4150.0, 7593.5], [4246.0, 4240.0], [4342.0, 7746.0], [4118.0, 8709.0], [4214.0, 8232.0], [4182.0, 4181.0], [4502.0, 2619.0], [4566.0, 3449.0], [4534.0, 3242.5], [4406.0, 8080.0], [4374.0, 4087.0], [4470.0, 2937.0], [4438.0, 1904.0], [4630.0, 5892.0], [4662.0, 6227.0], [4343.0, 2710.0], [4311.0, 3434.0], [4247.0, 7505.0], [4119.0, 3610.0], [4151.0, 7514.0], [4215.0, 8245.0], [4183.0, 7799.0], [4375.0, 4098.0], [4503.0, 5230.0], [4407.0, 8055.0], [4471.0, 2705.0], [4439.0, 4078.0], [4631.0, 5885.0], [4663.0, 6214.0], [4695.0, 4989.0], [539.0, 15142.0], [543.0, 15171.0], [535.0, 15183.0], [527.0, 15204.0], [523.0, 15180.0], [515.0, 16698.0], [575.0, 15225.0], [571.0, 15200.5], [563.0, 19347.0], [551.0, 16866.0], [583.0, 19545.0], [603.0, 961.0], [579.0, 19602.0], [607.0, 15563.0], [599.0, 19495.0], [595.0, 19514.0], [591.0, 19510.0], [587.0, 19533.0], [615.0, 15565.0], [611.0, 15650.666666666666], [667.0, 15387.0], [663.0, 15534.0], [647.0, 15561.0], [643.0, 19402.0], [703.0, 15496.666666666666], [695.0, 15517.5], [687.0, 15607.8], [683.0, 15600.0], [675.0, 15577.0], [735.0, 15621.0], [731.0, 15629.0], [711.0, 15646.0], [707.0, 15574.0], [719.0, 15546.0], [715.0, 15506.5], [763.0, 8448.5], [767.0, 15433.0], [751.0, 15461.0], [747.0, 15397.0], [739.0, 15357.0], [795.0, 15261.0], [799.0, 15304.0], [771.0, 15425.0], [791.0, 15304.4], [783.0, 15336.5], [779.0, 16339.0], [807.0, 15301.666666666666], [827.0, 6228.166666666666], [803.0, 15314.5], [811.0, 1645.0], [819.0, 15446.6], [831.0, 15643.0], [823.0, 1620.0], [863.0, 15270.0], [851.0, 15440.0], [847.0, 15362.0], [835.0, 15974.0], [891.0, 15166.0], [887.0, 15402.5], [879.0, 15346.0], [875.0, 15440.0], [927.0, 15300.0], [915.0, 15524.0], [959.0, 15653.0], [955.0, 15725.0], [951.0, 15772.333333333334], [943.0, 15729.166666666666], [935.0, 15392.0], [991.0, 15300.5], [979.0, 15754.0], [971.0, 15381.0], [963.0, 15401.0], [1023.0, 2243.5], [1015.0, 4061.333333333333], [1019.0, 15267.0], [999.0, 15247.5], [1038.0, 10841.0], [1078.0, 1966.6666666666667], [1062.0, 1941.0], [1054.0, 1984.0], [1046.0, 2046.5], [1070.0, 1861.0], [1142.0, 16208.0], [1102.0, 15538.333333333334], [1134.0, 15603.0], [1126.0, 15431.666666666666], [1118.0, 15535.0], [1166.0, 15505.0], [1214.0, 15237.0], [1198.0, 15217.0], [1190.0, 15359.0], [1158.0, 15508.8], [1278.0, 14070.0], [1270.0, 12029.0], [1262.0, 14079.0], [1254.0, 11979.0], [1246.0, 14728.5], [1238.0, 17159.0], [1342.0, 11981.0], [1334.0, 12035.0], [1326.0, 12031.0], [1318.0, 12004.0], [1310.0, 14813.0], [1286.0, 14742.0], [1294.0, 12070.0], [1302.0, 14755.0], [1406.0, 12147.0], [1398.0, 12105.0], [1390.0, 14727.0], [1382.0, 14683.0], [1374.0, 11929.0], [1350.0, 12253.0], [1366.0, 14644.0], [1462.0, 11756.0], [1470.0, 11881.0], [1422.0, 11899.0], [1414.0, 12077.0], [1454.0, 13727.0], [1446.0, 11954.0], [1438.0, 11826.0], [1430.0, 11834.0], [1526.0, 14588.0], [1534.0, 13916.0], [1486.0, 11620.0], [1478.0, 11758.0], [1518.0, 14319.0], [1510.0, 14097.0], [1502.0, 14041.0], [1494.0, 11828.0], [1590.0, 11633.0], [1598.0, 11597.0], [1550.0, 11698.0], [1542.0, 14399.0], [1582.0, 13520.0], [1574.0, 12190.0], [1566.0, 13529.0], [1558.0, 11677.0], [1662.0, 14464.0], [1654.0, 14237.0], [1646.0, 14221.0], [1638.0, 11315.0], [1630.0, 13443.333333333334], [1606.0, 11419.0], [1614.0, 11655.0], [1622.0, 13443.0], [1726.0, 13669.0], [1718.0, 14010.0], [1710.0, 13648.0], [1702.0, 11544.0], [1694.0, 11499.0], [1670.0, 11482.0], [1678.0, 11454.0], [1686.0, 14413.0], [1790.0, 14239.0], [1782.0, 11571.0], [1774.0, 12351.0], [1766.0, 12403.0], [1758.0, 11633.0], [1734.0, 11435.0], [1742.0, 13945.0], [1750.0, 14042.0], [1798.0, 11581.0], [1806.0, 5761.666666666666], [1822.0, 11453.0], [1814.0, 11488.0], [1854.0, 12340.0], [1846.0, 12244.0], [1838.0, 11462.0], [1830.0, 11531.0], [1918.0, 11643.0], [1910.0, 11332.0], [1902.0, 14062.0], [1894.0, 12312.0], [1886.0, 11089.0], [1862.0, 12508.0], [1870.0, 12465.0], [1878.0, 12483.0], [1982.0, 11926.0], [1934.0, 12117.0], [1926.0, 11666.0], [1966.0, 12035.0], [1958.0, 15377.0], [1942.0, 11930.0], [1998.0, 12131.0], [1990.0, 11980.0], [2030.0, 15325.0], [2022.0, 11967.0], [2014.0, 11926.0], [2006.0, 11969.0], [2156.0, 15172.0], [2172.0, 11176.0], [2060.0, 15211.0], [2140.0, 12230.25], [2108.0, 15120.0], [2092.0, 15229.0], [2204.0, 11064.5], [2284.0, 11909.0], [2268.0, 10820.0], [2252.0, 10924.0], [2220.0, 11948.0], [2188.0, 15076.0], [2412.0, 13984.0], [2428.0, 13151.0], [2332.0, 8682.0], [2316.0, 9738.0], [2396.0, 11010.5], [2364.0, 11888.75], [2348.0, 9051.0], [2556.0, 12908.0], [2540.0, 10418.5], [2492.0, 7852.0], [2620.0, 8471.666666666666], [2604.0, 10248.0], [2684.0, 9864.333333333334], [2668.0, 10452.2], [2588.0, 7544.0], [2796.0, 8066.0], [2812.0, 7978.0], [2716.0, 12619.0], [2700.0, 12784.0], [2748.0, 8234.0], [2732.0, 10415.0], [2780.0, 11750.0], [2924.0, 9462.0], [2876.0, 9573.0], [2844.0, 11867.5], [2828.0, 7036.0], [2860.0, 7892.5], [2908.0, 12434.0], [2972.0, 10024.0], [3068.0, 11051.0], [3004.0, 7670.0], [3180.0, 8585.0], [3084.0, 9045.75], [3196.0, 7498.0], [3100.0, 7513.0], [3132.0, 9022.0], [3116.0, 9898.0], [3164.0, 7866.5], [3308.0, 7578.0], [3260.0, 8287.0], [3228.0, 9421.0], [3276.0, 7854.0], [3356.0, 7521.0], [3404.0, 9485.0], [3436.0, 6069.0], [3388.0, 8049.0], [3372.0, 7823.5], [3420.0, 6184.0], [3580.0, 7900.5], [3532.0, 8126.0], [3516.0, 8505.0], [3484.0, 6031.0], [3548.0, 8169.0], [3660.0, 8033.0], [3692.0, 6346.5], [3612.0, 8057.333333333333], [3676.0, 9310.0], [3644.0, 8098.0], [3628.0, 7773.0], [3724.0, 7698.0], [3804.0, 4601.0], [3772.0, 7468.0], [3756.0, 7986.0], [3788.0, 7270.0], [3868.0, 6099.0], [3964.0, 8375.0], [3916.0, 4019.0], [3852.0, 7734.0], [3900.0, 4117.0], [4076.0, 9235.0], [4044.0, 5409.0], [4060.0, 5498.0], [4028.0, 3850.0], [4248.0, 7500.0], [4280.0, 6896.0], [4344.0, 2378.0], [4312.0, 3720.0], [4216.0, 8207.0], [4504.0, 5233.0], [4408.0, 2125.0], [4472.0, 2965.0], [4632.0, 5629.0], [4664.0, 6222.0], [4345.0, 6742.0], [4249.0, 5920.0], [4313.0, 3743.0], [4217.0, 5027.0], [4185.0, 3390.5], [4377.0, 4109.0], [4537.0, 3258.0], [4569.0, 3885.6666666666665], [4409.0, 2136.0], [4473.0, 3560.0], [4441.0, 3174.0], [4633.0, 6817.0], [4665.0, 4705.0], [4697.0, 5648.333333333333], [2157.0, 12427.0], [2141.0, 15115.0], [2109.0, 15072.0], [2093.0, 15190.0], [2205.0, 11069.25], [2189.0, 11135.0], [2269.0, 12014.0], [2253.0, 10917.0], [2237.0, 9926.0], [2333.0, 8714.0], [2413.0, 13901.0], [2317.0, 9688.0], [2381.0, 8543.333333333334], [2365.0, 11386.0], [2349.0, 9056.0], [2541.0, 7650.0], [2525.0, 8051.5], [2509.0, 10957.5], [2493.0, 7755.0], [2477.0, 7895.333333333333], [2685.0, 10806.0], [2589.0, 7765.0], [2637.0, 10639.5], [2605.0, 7673.0], [2797.0, 9993.0], [2749.0, 10508.0], [2717.0, 10003.0], [2781.0, 9897.0], [2765.0, 8023.0], [2941.0, 11166.333333333334], [2877.0, 7736.0], [2829.0, 10574.0], [2845.0, 9108.0], [2861.0, 12722.0], [3021.0, 10726.5], [3005.0, 7632.0], [3181.0, 8134.0], [3085.0, 7575.0], [3133.0, 10489.0], [3149.0, 9156.5], [3309.0, 7853.0], [3277.0, 7834.0], [3229.0, 10342.0], [3213.0, 7298.0], [3261.0, 11765.0], [3245.0, 8285.0], [3293.0, 10848.0], [3389.0, 6298.0], [3373.0, 10154.0], [3421.0, 6132.0], [3405.0, 6227.0], [3469.0, 7326.0], [3565.0, 8048.5], [3517.0, 8542.0], [3485.0, 7871.0], [3501.0, 8309.666666666666], [3549.0, 6764.0], [3533.0, 6869.0], [3661.0, 8029.0], [3693.0, 8540.0], [3677.0, 4880.0], [3645.0, 10198.0], [3597.0, 7818.5], [3613.0, 8257.0], [3629.0, 7731.0], [3837.0, 7172.5], [3821.0, 6212.25], [3741.0, 8801.5], [3789.0, 7303.0], [3965.0, 5210.0], [3933.0, 5153.0], [3901.0, 4073.0], [3885.0, 7022.666666666667], [4093.0, 6627.0], [4061.0, 5614.0], [4077.0, 9235.0], [3981.0, 4123.0], [3997.0, 6557.5], [4029.0, 4269.0], [4013.0, 5132.166666666667], [4346.0, 2687.0], [4314.0, 3743.0], [4250.0, 5523.0], [4122.0, 6077.666666666667], [4218.0, 8213.0], [4186.0, 3028.0], [4282.0, 7373.5], [4538.0, 3321.0], [4602.0, 4683.888888888889], [4570.0, 4798.0], [4410.0, 2138.0], [4378.0, 4122.0], [4634.0, 4624.0], [4666.0, 6209.0], [4698.0, 1555.0], [4347.0, 4079.0], [4123.0, 3090.0], [4155.0, 6332.25], [4219.0, 8176.0], [4571.0, 4985.0], [4507.0, 5754.666666666667], [4539.0, 3260.0], [4379.0, 4114.0], [4411.0, 2119.0], [4443.0, 1987.5], [4635.0, 6470.0], [4667.0, 5207.0], [4699.0, 1557.0], [1063.0, 13286.666666666668], [1071.0, 15524.25], [1055.0, 13292.666666666668], [1039.0, 2022.0], [1047.0, 2044.0], [1079.0, 15571.0], [1087.0, 15561.75], [1151.0, 15569.0], [1111.0, 15591.0], [1095.0, 15663.5], [1215.0, 16043.0], [1207.0, 15269.5], [1183.0, 14763.333333333334], [1159.0, 15438.0], [1279.0, 14131.0], [1271.0, 12043.0], [1263.0, 14122.0], [1255.0, 12332.0], [1247.0, 14079.0], [1223.0, 15196.666666666666], [1239.0, 17117.0], [1343.0, 14324.0], [1335.0, 12038.0], [1327.0, 12037.0], [1319.0, 14853.0], [1311.0, 14838.0], [1287.0, 14746.0], [1295.0, 14863.0], [1303.0, 12087.0], [1407.0, 12098.0], [1399.0, 11870.0], [1391.0, 14741.0], [1383.0, 14706.0], [1375.0, 12119.0], [1351.0, 14627.0], [1367.0, 11967.0], [1471.0, 11761.0], [1463.0, 12001.0], [1447.0, 13468.0], [1439.0, 11956.0], [1415.0, 12126.0], [1423.0, 14906.0], [1431.0, 11847.0], [1487.0, 14102.0], [1535.0, 11732.0], [1479.0, 11797.0], [1519.0, 14357.0], [1511.0, 14085.0], [1503.0, 14068.0], [1495.0, 11821.0], [1599.0, 11588.0], [1591.0, 11677.0], [1583.0, 11670.0], [1575.0, 11852.0], [1567.0, 11779.0], [1543.0, 14649.5], [1551.0, 11717.0], [1559.0, 13557.0], [1663.0, 14497.0], [1655.0, 14215.0], [1647.0, 14186.0], [1639.0, 11589.0], [1631.0, 13489.0], [1607.0, 11717.0], [1615.0, 11642.0], [1727.0, 13725.0], [1719.0, 13660.0], [1711.0, 13632.0], [1703.0, 11421.0], [1695.0, 14433.0], [1671.0, 11562.0], [1679.0, 11532.0], [1687.0, 11453.0], [1791.0, 14243.0], [1783.0, 12391.0], [1775.0, 12364.0], [1767.0, 12373.0], [1759.0, 11557.0], [1735.0, 13932.0], [1743.0, 13709.0], [1799.0, 11504.0], [1807.0, 7095.0], [1823.0, 13440.0], [1815.0, 13444.0], [1855.0, 12268.0], [1847.0, 12288.0], [1839.0, 11492.0], [1831.0, 11581.0], [1919.0, 11664.0], [1895.0, 7012.5], [1911.0, 13296.0], [1871.0, 12401.0], [1863.0, 12312.0], [1903.0, 14093.0], [1887.0, 12206.0], [1879.0, 12476.0], [1935.0, 12109.0], [1983.0, 13701.5], [1927.0, 11037.0], [1967.0, 10116.0], [1951.0, 15437.0], [1943.0, 10193.0], [1999.0, 11964.0], [2039.0, 15369.0], [1991.0, 11967.0], [2023.0, 11965.0], [2015.0, 11975.0], [2007.0, 11953.0], [2158.0, 12433.0], [2174.0, 11151.5], [2062.0, 15320.5], [2142.0, 10577.0], [2126.0, 12957.75], [2110.0, 15088.0], [2094.0, 15198.0], [2286.0, 10845.5], [2302.0, 11820.333333333334], [2206.0, 11055.0], [2190.0, 11281.0], [2270.0, 10809.0], [2254.0, 10892.0], [2238.0, 10989.666666666666], [2222.0, 12017.5], [2414.0, 13891.0], [2430.0, 8593.5], [2398.0, 10258.5], [2382.0, 8541.0], [2318.0, 9708.0], [2542.0, 7629.0], [2526.0, 7871.0], [2478.0, 7780.0], [2686.0, 10568.0], [2670.0, 11192.0], [2638.0, 11173.0], [2590.0, 7688.0], [2622.0, 10210.5], [2606.0, 7684.0], [2654.0, 9224.333333333334], [2718.0, 8974.0], [2814.0, 8047.0], [2766.0, 8179.0], [2750.0, 10240.0], [2734.0, 9276.5], [2942.0, 11302.0], [2894.0, 7738.0], [2846.0, 6725.0], [2910.0, 9644.5], [2958.0, 8324.0], [3070.0, 9576.5], [3038.0, 7578.0], [3006.0, 7636.0], [3198.0, 8535.0], [3102.0, 8697.5], [3118.0, 8213.5], [3166.0, 7042.0], [3278.0, 7837.0], [3310.0, 7797.0], [3230.0, 7782.0], [3214.0, 6072.0], [3262.0, 9380.0], [3294.0, 11693.0], [3454.0, 6286.0], [3406.0, 6164.0], [3438.0, 8332.0], [3358.0, 7106.0], [3342.0, 9359.375], [3390.0, 8057.0], [3422.0, 6138.0], [3566.0, 7898.0], [3582.0, 8076.0], [3518.0, 8205.0], [3486.0, 5874.0], [3534.0, 8216.0], [3614.0, 7811.0], [3678.0, 6675.0], [3662.0, 10577.0], [3646.0, 9344.0], [3630.0, 8256.0], [3838.0, 7700.0], [3822.0, 10229.0], [3726.0, 4918.5], [3774.0, 7473.0], [3950.0, 6638.666666666667], [3918.0, 4030.5], [3934.0, 6074.0], [3870.0, 7251.0], [3902.0, 5995.0], [3886.0, 7505.0], [4078.0, 9238.0], [4094.0, 8286.0], [4046.0, 6336.5], [4062.0, 5491.0], [4030.0, 8135.0], [3982.0, 4117.0], [3998.0, 4232.0], [4014.0, 4268.0], [4252.0, 5578.0], [4348.0, 6102.0], [4284.0, 6851.0], [4316.0, 3767.5], [4220.0, 7607.0], [4124.0, 3083.0], [4156.0, 7679.0], [4572.0, 3415.0], [4604.0, 5048.5], [4380.0, 4120.0], [4476.0, 2502.3333333333335], [4636.0, 3976.0], [4700.0, 4978.0], [4317.0, 3728.0], [4253.0, 6534.0], [4285.0, 7358.0], [4221.0, 5715.0], [4157.0, 4259.0], [4189.0, 3422.6666666666665], [4605.0, 5867.0], [4541.0, 5369.5], [4573.0, 4793.0], [4381.0, 4113.0], [4413.0, 7185.0], [4477.0, 1595.0], [4637.0, 5591.0], [4669.0, 5202.0], [4701.0, 4974.0], [2143.0, 11496.0], [2095.0, 15155.0], [2303.0, 11689.0], [2287.0, 9034.0], [2207.0, 11083.0], [2191.0, 11070.0], [2271.0, 9777.0], [2239.0, 10957.0], [2335.0, 14425.0], [2431.0, 11105.0], [2415.0, 11343.0], [2383.0, 10118.0], [2367.0, 12780.0], [2319.0, 9803.0], [2543.0, 8111.0], [2511.0, 11132.5], [2479.0, 7858.0], [2463.0, 8081.5], [2591.0, 12840.0], [2575.0, 9738.0], [2623.0, 10671.0], [2607.0, 7635.0], [2799.0, 8908.0], [2815.0, 7942.0], [2751.0, 8899.0], [2703.0, 10382.0], [2719.0, 9002.0], [2783.0, 8945.5], [2943.0, 11295.0], [2847.0, 11585.0], [2895.0, 7780.0], [2879.0, 7752.5], [2863.0, 7840.0], [3055.0, 7542.0], [3023.0, 10114.5], [3007.0, 7673.0], [2991.0, 8627.6], [3199.0, 8556.0], [3183.0, 7051.5], [3103.0, 8940.0], [3119.0, 6748.0], [3151.0, 8472.0], [3311.0, 7849.0], [3215.0, 7773.0], [3263.0, 8294.0], [3247.0, 8795.0], [3295.0, 10395.0], [3279.0, 7845.0], [3455.0, 5961.0], [3407.0, 8115.0], [3391.0, 8007.0], [3343.0, 7537.0], [3359.0, 8073.0], [3375.0, 6184.0], [3567.0, 7936.0], [3583.0, 7981.0], [3535.0, 10949.0], [3519.0, 8148.0], [3503.0, 8427.5], [3551.0, 8164.5], [3647.0, 9049.0], [3679.0, 4926.0], [3663.0, 7884.0], [3743.0, 8801.0], [3839.0, 6129.0], [3775.0, 7458.0], [3759.0, 4694.0], [3791.0, 7468.5], [3935.0, 6068.0], [3951.0, 7117.0], [3903.0, 4230.0], [3855.0, 9318.333333333334], [4095.0, 8193.0], [4079.0, 9635.0], [4047.0, 7370.0], [4063.0, 8396.0], [4031.0, 4132.0], [3983.0, 9444.5], [3999.0, 4291.0], [4015.0, 4269.0], [4318.0, 3762.0], [4158.0, 8491.0], [4254.0, 5576.0], [4126.0, 5676.0], [4222.0, 4345.0], [4190.0, 5203.0], [4574.0, 4797.0], [4606.0, 5865.0], [4510.0, 5573.666666666667], [4542.0, 3242.0], [4382.0, 4151.0], [4478.0, 2961.0], [4702.0, 5970.0], [4319.0, 6485.0], [4351.0, 4792.333333333333], [4287.0, 6402.5], [4223.0, 5701.0], [4127.0, 3074.0], [4159.0, 8489.0], [4575.0, 4963.0], [4543.0, 3380.0], [4479.0, 2941.0], [4415.0, 5041.5], [4639.0, 6907.5], [4671.0, 5603.5], [4703.0, 6133.0], [1.0, 31715.0]], "isOverall": false, "label": "PaginasPrincipales", "isController": false}, {"data": [[2284.7067999999977, 10813.731999999995]], "isOverall": false, "label": "PaginasPrincipales-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4721.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7477.266666666666, "minX": 1.65282006E12, "maxY": 242106.75, "series": [{"data": [[1.65282006E12, 242106.75]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.65282006E12, 7477.266666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65282006E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 10813.731999999995, "minX": 1.65282006E12, "maxY": 10813.731999999995, "series": [{"data": [[1.65282006E12, 10813.731999999995]], "isOverall": false, "label": "PaginasPrincipales", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65282006E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6953.96080000001, "minX": 1.65282006E12, "maxY": 6953.96080000001, "series": [{"data": [[1.65282006E12, 6953.96080000001]], "isOverall": false, "label": "PaginasPrincipales", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65282006E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 5552.6318000000065, "minX": 1.65282006E12, "maxY": 5552.6318000000065, "series": [{"data": [[1.65282006E12, 5552.6318000000065]], "isOverall": false, "label": "PaginasPrincipales", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65282006E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 43.0, "minX": 1.65282006E12, "maxY": 22147.0, "series": [{"data": [[1.65282006E12, 22147.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.65282006E12, 15450.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.65282006E12, 16515.86]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.65282006E12, 15590.1]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.65282006E12, 43.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.65282006E12, 8148.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65282006E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 455.5, "minX": 3.0, "maxY": 31624.0, "series": [{"data": [[534.0, 15775.0], [39.0, 22026.0], [167.0, 15216.5], [184.0, 11080.0], [214.0, 5056.0], [208.0, 5708.0], [218.0, 4354.0], [227.0, 8542.0], [60.0, 455.5], [62.0, 1600.0], [17.0, 3324.0], [277.0, 15492.0], [18.0, 2110.5], [19.0, 5215.0], [346.0, 7924.5], [359.0, 8938.0], [371.0, 15255.0], [376.0, 15442.5], [93.0, 15215.0], [395.0, 8280.0], [411.0, 7121.0], [122.0, 1940.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[534.0, 13443.0], [37.0, 23064.0], [39.0, 20221.0], [167.0, 19435.0], [184.0, 11391.0], [46.0, 23905.0], [3.0, 23389.0], [12.0, 31624.0], [214.0, 1556.0], [14.0, 20980.5], [277.0, 19495.0], [86.0, 21249.5], [85.0, 23672.0], [371.0, 12062.0], [376.0, 15302.0], [93.0, 19557.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 534.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 22025.0, "series": [{"data": [[534.0, 15775.0], [39.0, 22025.0], [167.0, 15215.5], [184.0, 11080.0], [214.0, 5051.0], [208.0, 5696.0], [218.0, 4354.0], [227.0, 8524.0], [60.0, 446.0], [62.0, 1600.0], [17.0, 3324.0], [277.0, 15480.0], [18.0, 2110.5], [19.0, 5215.0], [346.0, 7922.5], [359.0, 8781.0], [371.0, 15244.5], [376.0, 15424.0], [93.0, 15203.0], [395.0, 8243.0], [411.0, 7121.0], [122.0, 1940.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[534.0, 0.0], [37.0, 0.0], [39.0, 0.0], [167.0, 0.0], [184.0, 0.0], [46.0, 0.0], [3.0, 0.0], [12.0, 0.0], [214.0, 0.0], [14.0, 0.0], [277.0, 0.0], [86.0, 0.0], [85.0, 0.0], [371.0, 0.0], [376.0, 7597.0], [93.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 534.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.65282006E12, "maxY": 83.33333333333333, "series": [{"data": [[1.65282006E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65282006E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.65282006E12, "maxY": 63.28333333333333, "series": [{"data": [[1.65282006E12, 63.28333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.65282006E12, 4.3]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.65282006E12, 1.3166666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.65282006E12, 0.08333333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.65282006E12, 14.35]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.65282006E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 20.05, "minX": 1.65282006E12, "maxY": 63.28333333333333, "series": [{"data": [[1.65282006E12, 63.28333333333333]], "isOverall": false, "label": "PaginasPrincipales-success", "isController": false}, {"data": [[1.65282006E12, 20.05]], "isOverall": false, "label": "PaginasPrincipales-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65282006E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 20.05, "minX": 1.65282006E12, "maxY": 63.28333333333333, "series": [{"data": [[1.65282006E12, 63.28333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.65282006E12, 20.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.65282006E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

